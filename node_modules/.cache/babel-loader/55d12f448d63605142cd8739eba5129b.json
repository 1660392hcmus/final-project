{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/Account/components/AccountDetails/AccountDetails.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { Button, TextField } from '@material-ui/core';\nimport { Portlet, PortletHeader, PortletLabel, PortletContent, PortletFooter } from '../../../../../components'; // Component styles\n\nimport styles from './styles';\n\nclass Account extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      password: ''\n    };\n\n    this.handleFieldChange = (field, value) => {\n      const newState = { ...this.state\n      };\n      newState[field] = value;\n      this.setState(newState);\n    };\n\n    this.onUpdateUser = async () => {\n      try {\n        const {\n          name,\n          email,\n          phone,\n          password\n        } = this.state;\n        const token = localStorage.getItem('jwtToken');\n        let body = {\n          name,\n          email,\n          phone\n        };\n        if (password) body = { ...body,\n          password\n        };\n        const url = '/users/me';\n        const response = await fetch(url, {\n          method: 'PATCH',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        });\n\n        if (response.ok) {\n          const user = await response.json();\n          if (this.props.file) this.props.uploadImage(user._id, this.props.file);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      name,\n      email,\n      phone\n    } = this.props.user;\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      className\n    } = this.props;\n    const {\n      name,\n      phone,\n      email,\n      password\n    } = this.state;\n    const rootClassName = classNames(classes.root, className);\n    return /*#__PURE__*/React.createElement(Portlet, {\n      className: rootClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PortletHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PortletLabel, {\n      subtitle: \"The information can be edited\",\n      title: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(PortletContent, {\n      noPadding: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      helperText: \"Please specify the first name\",\n      label: \"FUll Name\",\n      margin: \"dense\",\n      required: true,\n      value: name,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('name', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Email Address\",\n      margin: \"dense\",\n      required: true,\n      value: email,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('email', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Phone Number\",\n      margin: \"dense\",\n      type: \"number\",\n      value: phone,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('phone', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Password\",\n      margin: \"dense\",\n      type: \"password\",\n      value: password,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('password', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(PortletFooter, {\n      className: classes.portletFooter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: this.onUpdateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Save details\")));\n  }\n\n}\n\nAccount.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Account);","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/Account/components/AccountDetails/AccountDetails.js"],"names":["React","Component","classNames","PropTypes","withStyles","Button","TextField","Portlet","PortletHeader","PortletLabel","PortletContent","PortletFooter","styles","Account","state","name","email","phone","password","handleFieldChange","field","value","newState","setState","onUpdateUser","token","localStorage","getItem","body","url","response","fetch","method","headers","Authorization","JSON","stringify","ok","user","json","props","file","uploadImage","_id","error","console","log","componentDidMount","render","classes","className","rootClassName","root","textField","event","target","portletFooter","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { Button, TextField } from '@material-ui/core';\nimport {\n  Portlet,\n  PortletHeader,\n  PortletLabel,\n  PortletContent,\n  PortletFooter\n} from '../../../../../components';\n\n// Component styles\nimport styles from './styles';\n\nclass Account extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    password: ''\n  };\n\n  componentDidMount() {\n    const { name, email, phone } = this.props.user;\n    this.setState({ name, email, phone });\n  }\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n    newState[field] = value;\n    this.setState(newState);\n  };\n\n  onUpdateUser = async () => {\n    try {\n      const { name, email, phone, password } = this.state;\n      const token = localStorage.getItem('jwtToken');\n      let body = { name, email, phone };\n      if (password) body = { ...body, password };\n      const url = '/users/me';\n      const response = await fetch(url, {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      if (response.ok) {\n        const user = await response.json();\n        if (this.props.file) this.props.uploadImage(user._id, this.props.file);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    const { classes, className } = this.props;\n    const { name, phone, email, password } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet className={rootClassName}>\n        <PortletHeader>\n          <PortletLabel\n            subtitle=\"The information can be edited\"\n            title=\"Profile\"\n          />\n        </PortletHeader>\n        <PortletContent noPadding>\n          <form autoComplete=\"off\" noValidate>\n            <div className={classes.field}>\n              <TextField\n                className={classes.textField}\n                helperText=\"Please specify the first name\"\n                label=\"FUll Name\"\n                margin=\"dense\"\n                required\n                value={name}\n                variant=\"outlined\"\n                onChange={event =>\n                  this.handleFieldChange('name', event.target.value)\n                }\n              />\n              <TextField\n                className={classes.textField}\n                label=\"Email Address\"\n                margin=\"dense\"\n                required\n                value={email}\n                variant=\"outlined\"\n                onChange={event =>\n                  this.handleFieldChange('email', event.target.value)\n                }\n              />\n            </div>\n            <div className={classes.field}>\n              <TextField\n                className={classes.textField}\n                label=\"Phone Number\"\n                margin=\"dense\"\n                type=\"number\"\n                value={phone}\n                variant=\"outlined\"\n                onChange={event =>\n                  this.handleFieldChange('phone', event.target.value)\n                }\n              />\n              <TextField\n                className={classes.textField}\n                label=\"Password\"\n                margin=\"dense\"\n                type=\"password\"\n                value={password}\n                variant=\"outlined\"\n                onChange={event =>\n                  this.handleFieldChange('password', event.target.value)\n                }\n              />\n            </div>\n          </form>\n        </PortletContent>\n        <PortletFooter className={classes.portletFooter}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={this.onUpdateUser}>\n            Save details\n          </Button>\n        </PortletFooter>\n      </Portlet>\n    );\n  }\n}\n\nAccount.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Account);\n"]},"metadata":{},"sourceType":"module"}