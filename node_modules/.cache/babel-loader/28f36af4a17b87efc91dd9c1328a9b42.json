{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/MyDashboard/MyDashboard.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles, Grid, Typography, Container } from '@material-ui/core';\nimport { getMovies, getReservations, getCinemas } from '../../../store/actions';\nimport { MyReservationTable } from './components';\nimport Account from '../../Admin/Account';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontSize: '3rem',\n    lineHeight: '3rem',\n    textAlign: 'center',\n    textTransform: 'capitalize',\n    marginTop: theme.spacing(15),\n    marginBottom: theme.spacing(3)\n  },\n  [theme.breakpoints.down('sm')]: {\n    fullWidth: {\n      width: '100%'\n    }\n  }\n}));\n\nfunction MyDashboard(props) {\n  const {\n    user,\n    reservations,\n    movies,\n    cinemas,\n    getMovies,\n    getReservations,\n    getCinemas\n  } = props;\n  useEffect(() => {\n    getMovies();\n    getReservations();\n    getCinemas();\n  }, [getMovies, getReservations, getCinemas]);\n  const classes = useStyles(props);\n  const myReservations = reservations.filter(reservation => reservation.username === user.username);\n  console.log(myReservations);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, !!myReservations.length && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h2\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"My Reservations\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MyReservationTable, {\n    reservations: myReservations,\n    movies: movies,\n    cinemas: cinemas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h2\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"My Account\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst mapStateToProps = ({\n  authState,\n  movieState,\n  reservationState,\n  cinemaState\n}) => ({\n  user: authState.user,\n  movies: movieState.movies,\n  reservations: reservationState.reservations,\n  cinemas: cinemaState.cinemas\n});\n\nconst mapDispatchToProps = {\n  getMovies,\n  getReservations,\n  getCinemas\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDashboard);","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/MyDashboard/MyDashboard.js"],"names":["React","useEffect","connect","makeStyles","Grid","Typography","Container","getMovies","getReservations","getCinemas","MyReservationTable","Account","useStyles","theme","title","fontSize","lineHeight","textAlign","textTransform","marginTop","spacing","marginBottom","breakpoints","down","fullWidth","width","MyDashboard","props","user","reservations","movies","cinemas","classes","myReservations","filter","reservation","username","console","log","length","mapStateToProps","authState","movieState","reservationState","cinemaState","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles, Grid, Typography, Container } from '@material-ui/core';\nimport { getMovies, getReservations, getCinemas } from '../../../store/actions';\nimport { MyReservationTable } from './components';\nimport Account from '../../Admin/Account';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontSize: '3rem',\n    lineHeight: '3rem',\n    textAlign: 'center',\n    textTransform: 'capitalize',\n    marginTop: theme.spacing(15),\n    marginBottom: theme.spacing(3)\n  },\n  [theme.breakpoints.down('sm')]: {\n    fullWidth: { width: '100%' }\n  }\n}));\n\nfunction MyDashboard(props) {\n  const {\n    user,\n    reservations,\n    movies,\n    cinemas,\n    getMovies,\n    getReservations,\n    getCinemas\n  } = props;\n\n  useEffect(() => {\n    getMovies();\n    getReservations();\n    getCinemas();\n  }, [getMovies, getReservations, getCinemas]);\n\n  const classes = useStyles(props);\n\n  const myReservations = reservations.filter(\n    reservation => reservation.username === user.username\n  );\n\n  console.log(myReservations);\n\n  return (\n    <Container>\n      <Grid container spacing={2}>\n        {!!myReservations.length && (\n          <>\n            <Grid item xs={12}>\n              <Typography\n                className={classes.title}\n                variant=\"h2\"\n                color=\"inherit\">\n                My Reservations\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <MyReservationTable\n                reservations={myReservations}\n                movies={movies}\n                cinemas={cinemas}\n              />\n            </Grid>\n          </>\n        )}\n        <Grid item xs={12}>\n          <Typography className={classes.title} variant=\"h2\" color=\"inherit\">\n            My Account\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Account />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nconst mapStateToProps = ({\n  authState,\n  movieState,\n  reservationState,\n  cinemaState\n}) => ({\n  user: authState.user,\n  movies: movieState.movies,\n  reservations: reservationState.reservations,\n  cinemas: cinemaState.cinemas\n});\n\nconst mapDispatchToProps = { getMovies, getReservations, getCinemas };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyDashboard);\n"]},"metadata":{},"sourceType":"module"}