{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/ShowtimeList/components/AddShowtime/AddShowtime.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, Typography } from '@material-ui/core';\nimport { Button, TextField, MenuItem } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport styles from './styles';\nimport { addShowtime, updateShowtime } from '../../../../../store/actions';\n\nclass AddShowtime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startAt: '',\n      startDate: null,\n      endDate: null,\n      movieId: '',\n      cinemaId: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        state: e.target.value\n      });\n    };\n\n    this.handleFieldChange = (field, value) => {\n      const newState = { ...this.state\n      };\n      newState[field] = value;\n      this.setState(newState);\n    };\n\n    this.onAddShowtime = () => {\n      const {\n        startAt,\n        startDate,\n        endDate,\n        movieId,\n        cinemaId\n      } = this.state;\n      const showtime = {\n        startAt,\n        startDate,\n        endDate,\n        movieId,\n        cinemaId\n      };\n      this.props.addShowtime(showtime);\n    };\n\n    this.onUpdateShowtime = () => {\n      const {\n        startAt,\n        startDate,\n        endDate,\n        movieId,\n        cinemaId\n      } = this.state;\n      const showtime = {\n        startAt,\n        startDate,\n        endDate,\n        movieId,\n        cinemaId\n      };\n      this.props.updateShowtime(showtime, this.props.selectedShowtime._id);\n    };\n\n    this.onFilterMinDate = () => {\n      const {\n        nowShowing\n      } = this.props;\n      const {\n        movieId\n      } = this.state;\n      const selectedMovie = nowShowing.find(movie => movie._id === movieId);\n      if (selectedMovie) return selectedMovie.startDate;\n      return new Date();\n    };\n\n    this.onFilterMaxDate = () => {\n      const {\n        nowShowing\n      } = this.props;\n      const {\n        movieId\n      } = this.state;\n      const selectedMovie = nowShowing.find(movie => movie._id === movieId);\n      if (selectedMovie) return new Date(selectedMovie.endDate);\n      return false;\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.selectedShowtime) {\n      const {\n        startAt,\n        startDate,\n        endDate,\n        movieId,\n        cinemaId\n      } = this.props.selectedShowtime;\n      this.setState({\n        startAt,\n        startDate,\n        endDate,\n        movieId,\n        cinemaId\n      });\n    }\n  }\n\n  render() {\n    const {\n      nowShowing,\n      cinemas,\n      classes,\n      className\n    } = this.props;\n    const {\n      startAt,\n      startDate,\n      endDate,\n      movieId,\n      cinemaId\n    } = this.state;\n    const rootClassName = classNames(classes.root, className);\n    const title = this.props.selectedShowtime ? 'Edit Showtime' : 'Add Showtime';\n    const submitButton = this.props.selectedShowtime ? 'Update Showtime' : 'Save Details';\n    const submitAction = this.props.selectedShowtime ? () => this.onUpdateShowtime() : () => this.onAddShowtime();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: rootClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      select: true,\n      className: classes.textField,\n      helperText: \"Please specify the Time\",\n      label: \"Time\",\n      margin: \"dense\",\n      required: true,\n      value: startAt,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('startAt', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, ['18:00', '19:00', '20:00', '21:00', ' 22:00', '23:00'].map(time => /*#__PURE__*/React.createElement(MenuItem, {\n      key: `time-${time}`,\n      value: time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, time)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      select: true,\n      className: classes.textField,\n      label: \"Movie\",\n      margin: \"dense\",\n      required: true,\n      value: movieId,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('movieId', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, nowShowing.map(movie => /*#__PURE__*/React.createElement(MenuItem, {\n      key: movie._id,\n      value: movie._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, movie.title))), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      select: true,\n      className: classes.textField,\n      label: \"Cinema\",\n      margin: \"dense\",\n      required: true,\n      value: cinemaId,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('cinemaId', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, cinemas.map(cinema => /*#__PURE__*/React.createElement(MenuItem, {\n      key: cinema._id,\n      value: cinema._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, cinema.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      className: classes.textField,\n      inputVariant: \"outlined\",\n      margin: \"normal\",\n      id: \"start-date\",\n      label: \"Start Date\",\n      minDate: new Date(),\n      maxDate: this.onFilterMaxDate(),\n      value: startDate,\n      onChange: date => this.handleFieldChange('startDate', date._d),\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      className: classes.textField,\n      inputVariant: \"outlined\",\n      margin: \"normal\",\n      id: \"end-date\",\n      label: \"End Date\",\n      minDate: new Date(startDate),\n      maxDate: this.onFilterMaxDate(),\n      value: endDate,\n      onChange: date => this.handleFieldChange('endDate', date._d),\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      className: classes.buttonFooter,\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: submitAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, submitButton));\n  }\n\n}\n\nAddShowtime.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({\n  movieState,\n  cinemaState\n}) => ({\n  movies: movieState.movies,\n  nowShowing: movieState.nowShowing,\n  cinemas: cinemaState.cinemas\n});\n\nconst mapDispatchToProps = {\n  addShowtime,\n  updateShowtime\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddShowtime));","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/ShowtimeList/components/AddShowtime/AddShowtime.js"],"names":["React","Component","classNames","PropTypes","connect","withStyles","Typography","Button","TextField","MenuItem","MuiPickersUtilsProvider","KeyboardDatePicker","MomentUtils","styles","addShowtime","updateShowtime","AddShowtime","state","startAt","startDate","endDate","movieId","cinemaId","handleChange","e","setState","target","value","handleFieldChange","field","newState","onAddShowtime","showtime","props","onUpdateShowtime","selectedShowtime","_id","onFilterMinDate","nowShowing","selectedMovie","find","movie","Date","onFilterMaxDate","componentDidMount","render","cinemas","classes","className","rootClassName","root","title","submitButton","submitAction","textField","event","map","time","cinema","name","date","_d","buttonFooter","propTypes","string","object","isRequired","mapStateToProps","movieState","cinemaState","movies","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, Typography } from '@material-ui/core';\nimport { Button, TextField, MenuItem } from '@material-ui/core';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\n\nimport styles from './styles';\nimport { addShowtime, updateShowtime } from '../../../../../store/actions';\n\nclass AddShowtime extends Component {\n  state = {\n    startAt: '',\n    startDate: null,\n    endDate: null,\n    movieId: '',\n    cinemaId: ''\n  };\n\n  componentDidMount() {\n    if (this.props.selectedShowtime) {\n      const {\n        startAt,\n        startDate,\n        endDate,\n        movieId,\n        cinemaId\n      } = this.props.selectedShowtime;\n      this.setState({\n        startAt,\n        startDate,\n        endDate,\n        movieId,\n        cinemaId\n      });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      state: e.target.value\n    });\n  };\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n    newState[field] = value;\n    this.setState(newState);\n  };\n\n  onAddShowtime = () => {\n    const { startAt, startDate, endDate, movieId, cinemaId } = this.state;\n    const showtime = {\n      startAt,\n      startDate,\n      endDate,\n      movieId,\n      cinemaId\n    };\n    this.props.addShowtime(showtime);\n  };\n\n  onUpdateShowtime = () => {\n    const { startAt, startDate, endDate, movieId, cinemaId } = this.state;\n    const showtime = {\n      startAt,\n      startDate,\n      endDate,\n      movieId,\n      cinemaId\n    };\n    this.props.updateShowtime(showtime, this.props.selectedShowtime._id);\n  };\n\n  onFilterMinDate = () => {\n    const { nowShowing } = this.props;\n    const { movieId } = this.state;\n    const selectedMovie = nowShowing.find(movie => movie._id === movieId);\n    if (selectedMovie) return selectedMovie.startDate;\n    return new Date();\n  };\n\n  onFilterMaxDate = () => {\n    const { nowShowing } = this.props;\n    const { movieId } = this.state;\n    const selectedMovie = nowShowing.find(movie => movie._id === movieId);\n    if (selectedMovie) return new Date(selectedMovie.endDate);\n    return false;\n  };\n\n  render() {\n    const { nowShowing, cinemas, classes, className } = this.props;\n    const { startAt, startDate, endDate, movieId, cinemaId } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n    const title = this.props.selectedShowtime\n      ? 'Edit Showtime'\n      : 'Add Showtime';\n    const submitButton = this.props.selectedShowtime\n      ? 'Update Showtime'\n      : 'Save Details';\n    const submitAction = this.props.selectedShowtime\n      ? () => this.onUpdateShowtime()\n      : () => this.onAddShowtime();\n\n    return (\n      <div className={rootClassName}>\n        <Typography variant=\"h4\" className={classes.title}>\n          {title}\n        </Typography>\n        <form autoComplete=\"off\" noValidate>\n          <div className={classes.field}>\n            <TextField\n              fullWidth\n              select\n              className={classes.textField}\n              helperText=\"Please specify the Time\"\n              label=\"Time\"\n              margin=\"dense\"\n              required\n              value={startAt}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('startAt', event.target.value)\n              }>\n              {['18:00', '19:00', '20:00', '21:00', ' 22:00', '23:00'].map(\n                time => (\n                  <MenuItem key={`time-${time}`} value={time}>\n                    {time}\n                  </MenuItem>\n                )\n              )}\n            </TextField>\n          </div>\n          <div className={classes.field}>\n            <TextField\n              fullWidth\n              select\n              className={classes.textField}\n              label=\"Movie\"\n              margin=\"dense\"\n              required\n              value={movieId}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('movieId', event.target.value)\n              }>\n              {nowShowing.map(movie => (\n                <MenuItem key={movie._id} value={movie._id}>\n                  {movie.title}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              fullWidth\n              select\n              className={classes.textField}\n              label=\"Cinema\"\n              margin=\"dense\"\n              required\n              value={cinemaId}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('cinemaId', event.target.value)\n              }>\n              {cinemas.map(cinema => (\n                <MenuItem key={cinema._id} value={cinema._id}>\n                  {cinema.name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n\n          <div className={classes.field}>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <KeyboardDatePicker\n                className={classes.textField}\n                inputVariant=\"outlined\"\n                margin=\"normal\"\n                id=\"start-date\"\n                label=\"Start Date\"\n                minDate={new Date()}\n                maxDate={this.onFilterMaxDate()}\n                value={startDate}\n                onChange={date => this.handleFieldChange('startDate', date._d)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n\n              <KeyboardDatePicker\n                className={classes.textField}\n                inputVariant=\"outlined\"\n                margin=\"normal\"\n                id=\"end-date\"\n                label=\"End Date\"\n                minDate={new Date(startDate)}\n                maxDate={this.onFilterMaxDate()}\n                value={endDate}\n                onChange={date => this.handleFieldChange('endDate', date._d)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n        </form>\n\n        <Button\n          className={classes.buttonFooter}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={submitAction}>\n          {submitButton}\n        </Button>\n      </div>\n    );\n  }\n}\n\nAddShowtime.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({ movieState, cinemaState }) => ({\n  movies: movieState.movies,\n  nowShowing: movieState.nowShowing,\n  cinemas: cinemaState.cinemas\n});\n\nconst mapDispatchToProps = { addShowtime, updateShowtime };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(AddShowtime));\n"]},"metadata":{},"sourceType":"module"}