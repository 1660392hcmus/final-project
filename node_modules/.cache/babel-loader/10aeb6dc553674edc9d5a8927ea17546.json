{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/MovieCategoryPage/MovieCategoryPage.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles, Grid, Typography } from '@material-ui/core';\nimport ResponsiveMovieCard from '../components/ResponsiveMovieCard/ResponsiveMovieCard';\nimport { getMovies } from '../../../store/actions';\nimport { movies as localMovie } from '../../../fake-data';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontSize: '3rem',\n    lineHeight: '3rem',\n    textAlign: 'center',\n    textTransform: 'capitalize',\n    marginTop: theme.spacing(15),\n    marginBottom: theme.spacing(3)\n  },\n  [theme.breakpoints.down('sm')]: {\n    fullWidth: {\n      width: '100%'\n    }\n  }\n}));\n\nfunction MovieCategoryPage(props) {\n  const {\n    movies,\n    getMovies\n  } = props;\n  const category = props.match.params.category;\n  useEffect(() => {\n    if (!movies.length) {\n      getMovies();\n    }\n  }, [movies, getMovies]);\n  const classes = useStyles(props);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, !['nowShowing', 'comingSoon'].includes(category) ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h2\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Category Does not exist.\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h2\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, category)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(Grid, {\n    key: movie._id,\n    item: true,\n    className: classes.fullWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveMovieCard, {\n    movie: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nconst mapStateToProps = ({\n  movieState\n}, ownProps) => ({\n  movies: movieState[ownProps.match.params.category] || localMovie\n});\n\nconst mapDispatchToProps = {\n  getMovies\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieCategoryPage);","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/MovieCategoryPage/MovieCategoryPage.js"],"names":["React","useEffect","connect","makeStyles","Grid","Typography","ResponsiveMovieCard","getMovies","movies","localMovie","useStyles","theme","title","fontSize","lineHeight","textAlign","textTransform","marginTop","spacing","marginBottom","breakpoints","down","fullWidth","width","MovieCategoryPage","props","category","match","params","length","classes","includes","map","movie","_id","mapStateToProps","movieState","ownProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles, Grid, Typography } from '@material-ui/core';\nimport ResponsiveMovieCard from '../components/ResponsiveMovieCard/ResponsiveMovieCard';\nimport { getMovies } from '../../../store/actions';\nimport { movies as localMovie } from '../../../fake-data';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontSize: '3rem',\n    lineHeight: '3rem',\n    textAlign: 'center',\n    textTransform: 'capitalize',\n    marginTop: theme.spacing(15),\n    marginBottom: theme.spacing(3)\n  },\n  [theme.breakpoints.down('sm')]: {\n    fullWidth: { width: '100%' }\n  }\n}));\n\nfunction MovieCategoryPage(props) {\n  const { movies, getMovies } = props;\n  const category = props.match.params.category;\n  useEffect(() => {\n    if (!movies.length) {\n      getMovies();\n    }\n  }, [movies, getMovies]);\n\n  const classes = useStyles(props);\n  return (\n    <Grid container spacing={2}>\n      {!['nowShowing', 'comingSoon'].includes(category) ? (\n        <Grid item xs={12}>\n          <Typography className={classes.title} variant=\"h2\" color=\"inherit\">\n            Category Does not exist.\n          </Typography>\n        </Grid>\n      ) : (\n        <>\n          <Grid item xs={12}>\n            <Typography className={classes.title} variant=\"h2\" color=\"inherit\">\n              {category}\n            </Typography>\n          </Grid>\n          <Grid\n            container\n            item\n            xs={12}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            spacing={2}>\n            {movies.map(movie => (\n              <Grid key={movie._id} item className={classes.fullWidth}>\n                <ResponsiveMovieCard movie={movie} />\n              </Grid>\n            ))}\n          </Grid>\n        </>\n      )}\n    </Grid>\n  );\n}\n\nconst mapStateToProps = ({ movieState }, ownProps) => ({\n  movies: movieState[ownProps.match.params.category] || localMovie\n});\n\nconst mapDispatchToProps = { getMovies };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieCategoryPage);\n"]},"metadata":{},"sourceType":"module"}