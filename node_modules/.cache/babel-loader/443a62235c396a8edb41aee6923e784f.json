{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/MoviePage/MoviePage.js\";\n// @ts-nocheck\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport MovieBanner from '../components/MovieBanner/MovieBanner';\nimport { getMovie, onSelectMovie } from '../../../store/actions';\nimport { movies as localMovie } from '../../../fake-data';\n\nclass MoviePage extends Component {\n  componentDidMount() {\n    this.props.getMovie(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.onSelectMovie(null);\n  }\n\n  render() {\n    const {\n      movie\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, movie && /*#__PURE__*/React.createElement(MovieBanner, {\n      movie: movie,\n      fullDescription: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }\n    }));\n  }\n\n}\n\nMoviePage.propTypes = {\n  className: PropTypes.string,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({\n  movieState\n}) => ({\n  movie: movieState.selectedMovie || localMovie[0]\n});\n\nconst mapDispatchToProps = {\n  getMovie,\n  onSelectMovie\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePage);","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/MoviePage/MoviePage.js"],"names":["React","Component","PropTypes","connect","MovieBanner","getMovie","onSelectMovie","movies","localMovie","MoviePage","componentDidMount","props","match","params","id","componentWillUnmount","render","movie","propTypes","className","string","history","object","isRequired","mapStateToProps","movieState","selectedMovie","mapDispatchToProps"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,wBAAxC;AACA,SAASC,MAAM,IAAIC,UAAnB,QAAqC,oBAArC;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAChCS,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWN,QAAX,CAAoB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,KAAL,CAAWL,aAAX,CAAyB,IAAzB;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKN,KAAvB;AACA,wBAAO,0CAAGM,KAAK,iBAAI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEA,KAApB;AAA2B,MAAA,eAAe,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,CAAP;AACD;;AAZ+B;;AAelCR,SAAS,CAACS,SAAV,GAAsB;AACpBC,EAAAA,SAAS,EAAEjB,SAAS,CAACkB,MADD;AAEpBC,EAAAA,OAAO,EAAEnB,SAAS,CAACoB,MAAV,CAAiBC;AAFN,CAAtB;;AAKA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAqB;AAC3CR,EAAAA,KAAK,EAAEQ,UAAU,CAACC,aAAX,IAA4BlB,UAAU,CAAC,CAAD;AADF,CAArB,CAAxB;;AAIA,MAAMmB,kBAAkB,GAAG;AAAEtB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAA3B;AAEA,eAAeH,OAAO,CACpBqB,eADoB,EAEpBG,kBAFoB,CAAP,CAGblB,SAHa,CAAf","sourcesContent":["// @ts-nocheck\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport MovieBanner from '../components/MovieBanner/MovieBanner';\nimport { getMovie, onSelectMovie } from '../../../store/actions';\nimport { movies as localMovie } from '../../../fake-data';\n\nclass MoviePage extends Component {\n  componentDidMount() {\n    this.props.getMovie(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.onSelectMovie(null);\n  }\n\n  render() {\n    const { movie } = this.props;\n    return <>{movie && <MovieBanner movie={movie} fullDescription />}</>;\n  }\n}\n\nMoviePage.propTypes = {\n  className: PropTypes.string,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({ movieState }) => ({\n  movie: movieState.selectedMovie || localMovie[0]\n});\n\nconst mapDispatchToProps = { getMovie, onSelectMovie };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MoviePage);\n"]},"metadata":{},"sourceType":"module"}