{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/components/SnackbarContentWrapper/SnackbarContentWrapper.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info'; // import CloseIcon from '@material-ui/icons/Close';\n\nimport { amber, green } from '@material-ui/core/colors'; // import IconButton from '@material-ui/core/IconButton';\n\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nconst SnackbarContentWrapper = props => {\n  const {\n    classes,\n    className,\n    message,\n    onClose,\n    variant,\n    ...rest\n  } = props;\n  const Icon = variantIcon[variant];\n  return /*#__PURE__*/React.createElement(SnackbarContent, Object.assign({\n    className: classNames(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: classNames(classes.icon, classes.iconVariant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), message) // action={[\n    //   <IconButton\n    //     key=\"close\"\n    //     aria-label=\"Close\"\n    //     color=\"inherit\"\n    //     onClick={onClose}>\n    //     <CloseIcon className={classes.icon} />\n    //   </IconButton>\n    // ]}\n\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }));\n};\n\nSnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\nexport default withStyles(styles)(SnackbarContentWrapper);","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/components/SnackbarContentWrapper/SnackbarContentWrapper.js"],"names":["React","PropTypes","classNames","withStyles","CheckCircleIcon","ErrorIcon","InfoIcon","amber","green","SnackbarContent","WarningIcon","variantIcon","success","warning","error","info","styles","theme","backgroundColor","palette","dark","primary","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackbarContentWrapper","props","classes","className","onClose","variant","rest","Icon","propTypes","string","node","func","oneOf","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\n// import CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\n// import IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nconst SnackbarContentWrapper = props => {\n  const { classes, className, message, onClose, variant, ...rest } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      // action={[\n      //   <IconButton\n      //     key=\"close\"\n      //     aria-label=\"Close\"\n      //     color=\"inherit\"\n      //     onClick={onClose}>\n      //     <CloseIcon className={classes.icon} />\n      //   </IconButton>\n      // ]}\n      {...rest}\n    />\n  );\n};\n\nSnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\n\nexport default withStyles(styles)(SnackbarContentWrapper);\n"]},"metadata":{},"sourceType":"module"}