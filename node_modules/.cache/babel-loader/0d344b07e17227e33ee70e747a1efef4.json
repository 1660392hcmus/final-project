{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/CinemaList/components/AddCinema/AddCinema.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { Button, TextField, Typography } from '@material-ui/core';\nimport styles from './styles';\nimport { Add } from '@material-ui/icons';\nimport { getCinemas, createCinemas, updateCinemas, removeCinemas } from '../../../../../store/actions';\nimport { FileUpload } from '../../../../../components';\n\nclass AddCinema extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _id: '',\n      name: '',\n      image: null,\n      ticketPrice: '',\n      city: '',\n      seatsAvailable: '',\n      seats: [],\n      notification: {}\n    };\n\n    this.handleFieldChange = (field, value) => {\n      const newState = { ...this.state\n      };\n      newState[field] = value;\n      this.setState(newState);\n    };\n\n    this.onSubmitAction = async type => {\n      const {\n        getCinemas,\n        createCinemas,\n        updateCinemas,\n        removeCinemas\n      } = this.props;\n      const {\n        _id,\n        name,\n        image,\n        ticketPrice,\n        city,\n        seatsAvailable,\n        seats\n      } = this.state;\n      const cinema = {\n        name,\n        ticketPrice,\n        city,\n        seatsAvailable,\n        seats\n      };\n      let notification = {};\n      type === 'create' ? notification = await createCinemas(image, cinema) : type === 'update' ? notification = await updateCinemas(image, cinema, _id) : notification = await removeCinemas(_id);\n      this.setState({\n        notification\n      });\n      if (notification && notification.status === 'success') getCinemas();\n    };\n\n    this.handleSeatsChange = (index, value) => {\n      if (value > 10) return;\n      const {\n        seats\n      } = this.state;\n      seats[index] = Array.from({\n        length: value\n      }, () => 0);\n      this.setState({\n        seats\n      });\n    };\n\n    this.onAddSeatRow = () => {\n      this.setState(prevState => ({\n        seats: [...prevState.seats, []]\n      }));\n    };\n\n    this.renderSeatFields = () => {\n      const {\n        seats\n      } = this.state;\n      const {\n        classes\n      } = this.props;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.onAddSeatRow(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Add, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }), \" add Seats\")), seats.length > 0 && seats.map((seat, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: `seat-${index}-${seat.length}`,\n        className: classes.field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        key: `new-seat-${index}`,\n        className: classes.textField,\n        label: 'Add number of seats for row : ' + (index + 10).toString(36).toUpperCase(),\n        margin: \"dense\",\n        required: true,\n        value: seat.length,\n        variant: \"outlined\",\n        type: \"number\",\n        inputProps: {\n          min: 0,\n          max: 10\n        },\n        onChange: event => this.handleSeatsChange(index, event.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }))));\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.editCinema) {\n      const {\n        image,\n        ...rest\n      } = this.props.editCinema;\n      this.setState({ ...rest\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      className\n    } = this.props;\n    const {\n      name,\n      image,\n      ticketPrice,\n      city,\n      seatsAvailable,\n      notification\n    } = this.state;\n    const rootClassName = classNames(classes.root, className);\n    const mainTitle = this.props.editCinema ? 'Edit Cinema' : 'Add Cinema';\n    const submitButton = this.props.editCinema ? 'Update Cinema' : 'Save Details';\n    const submitAction = this.props.editCinema ? () => this.onSubmitAction('update') : () => this.onSubmitAction('create');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: rootClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, mainTitle), /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      helperText: \"Please specify the cinema name\",\n      label: \"Name\",\n      margin: \"dense\",\n      required: true,\n      value: name,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('name', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      className: classes.textField,\n      label: \"City\",\n      margin: \"dense\",\n      required: true,\n      variant: \"outlined\",\n      value: city,\n      onChange: event => this.handleFieldChange('city', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FileUpload, {\n      className: classes.textField,\n      file: image,\n      onUpload: event => {\n        const file = event.target.files[0];\n        this.handleFieldChange('image', file);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Ticket Price\",\n      margin: \"dense\",\n      type: \"number\",\n      value: ticketPrice,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('ticketPrice', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Seats Available\",\n      margin: \"dense\",\n      required: true,\n      value: seatsAvailable,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('seatsAvailable', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    })), this.renderSeatFields()), /*#__PURE__*/React.createElement(Button, {\n      className: classes.buttonFooter,\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: submitAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, submitButton), this.props.editCinema && /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      className: classes.buttonFooter,\n      variant: \"contained\",\n      onClick: () => this.onSubmitAction('remove'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, \"Delete Cinema\"), notification && notification.status ? notification.status === 'success' ? /*#__PURE__*/React.createElement(Typography, {\n      className: classes.infoMessage,\n      color: \"primary\",\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, notification.message) : /*#__PURE__*/React.createElement(Typography, {\n      className: classes.infoMessage,\n      color: \"error\",\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, notification.message) : null);\n  }\n\n}\n\nAddCinema.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\nconst mapStateToProps = null;\nconst mapDispatchToProps = {\n  getCinemas,\n  createCinemas,\n  updateCinemas,\n  removeCinemas\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddCinema));","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/CinemaList/components/AddCinema/AddCinema.js"],"names":["React","Component","connect","classNames","PropTypes","withStyles","Button","TextField","Typography","styles","Add","getCinemas","createCinemas","updateCinemas","removeCinemas","FileUpload","AddCinema","state","_id","name","image","ticketPrice","city","seatsAvailable","seats","notification","handleFieldChange","field","value","newState","setState","onSubmitAction","type","props","cinema","status","handleSeatsChange","index","Array","from","length","onAddSeatRow","prevState","renderSeatFields","classes","map","seat","textField","toString","toUpperCase","min","max","event","target","componentDidMount","editCinema","rest","render","className","rootClassName","root","mainTitle","submitButton","submitAction","title","file","files","buttonFooter","infoMessage","message","propTypes","string","object","isRequired","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { Button, TextField, Typography } from '@material-ui/core';\nimport styles from './styles';\nimport { Add } from '@material-ui/icons';\nimport {\n  getCinemas,\n  createCinemas,\n  updateCinemas,\n  removeCinemas\n} from '../../../../../store/actions';\nimport { FileUpload } from '../../../../../components';\n\nclass AddCinema extends Component {\n  state = {\n    _id: '',\n    name: '',\n    image: null,\n    ticketPrice: '',\n    city: '',\n    seatsAvailable: '',\n    seats: [],\n    notification: {}\n  };\n\n  componentDidMount() {\n    if (this.props.editCinema) {\n      const { image, ...rest } = this.props.editCinema;\n      this.setState({ ...rest });\n    }\n  }\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n    newState[field] = value;\n    this.setState(newState);\n  };\n\n  onSubmitAction = async type => {\n    const {\n      getCinemas,\n      createCinemas,\n      updateCinemas,\n      removeCinemas\n    } = this.props;\n    const {\n      _id,\n      name,\n      image,\n      ticketPrice,\n      city,\n      seatsAvailable,\n      seats\n    } = this.state;\n    const cinema = { name, ticketPrice, city, seatsAvailable, seats };\n    let notification = {};\n    type === 'create'\n      ? (notification = await createCinemas(image, cinema))\n      : type === 'update'\n      ? (notification = await updateCinemas(image, cinema, _id))\n      : (notification = await removeCinemas(_id));\n    this.setState({ notification });\n    if (notification && notification.status === 'success') getCinemas();\n  };\n\n  handleSeatsChange = (index, value) => {\n    if (value > 10) return;\n    const { seats } = this.state;\n    seats[index] = Array.from({ length: value }, () => 0);\n    this.setState({\n      seats\n    });\n  };\n\n  onAddSeatRow = () => {\n    this.setState(prevState => ({\n      seats: [...prevState.seats, []]\n    }));\n  };\n\n  renderSeatFields = () => {\n    const { seats } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        <div className={classes.field}>\n          <Button onClick={() => this.onAddSeatRow()}>\n            <Add /> add Seats\n          </Button>\n        </div>\n        {seats.length > 0 &&\n          seats.map((seat, index) => (\n            <div key={`seat-${index}-${seat.length}`} className={classes.field}>\n              <TextField\n                key={`new-seat-${index}`}\n                className={classes.textField}\n                label={\n                  'Add number of seats for row : ' +\n                  (index + 10).toString(36).toUpperCase()\n                }\n                margin=\"dense\"\n                required\n                value={seat.length}\n                variant=\"outlined\"\n                type=\"number\"\n                inputProps={{\n                  min: 0,\n                  max: 10\n                }}\n                onChange={event =>\n                  this.handleSeatsChange(index, event.target.value)\n                }\n              />\n            </div>\n          ))}\n      </>\n    );\n  };\n\n  render() {\n    const { classes, className } = this.props;\n    const {\n      name,\n      image,\n      ticketPrice,\n      city,\n      seatsAvailable,\n      notification\n    } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n    const mainTitle = this.props.editCinema ? 'Edit Cinema' : 'Add Cinema';\n    const submitButton = this.props.editCinema\n      ? 'Update Cinema'\n      : 'Save Details';\n    const submitAction = this.props.editCinema\n      ? () => this.onSubmitAction('update')\n      : () => this.onSubmitAction('create');\n\n    return (\n      <div className={rootClassName}>\n        <Typography variant=\"h4\" className={classes.title}>\n          {mainTitle}\n        </Typography>\n        <form autoComplete=\"off\" noValidate>\n          <div className={classes.field}>\n            <TextField\n              className={classes.textField}\n              helperText=\"Please specify the cinema name\"\n              label=\"Name\"\n              margin=\"dense\"\n              required\n              value={name}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('name', event.target.value)\n              }\n            />\n\n            <TextField\n              fullWidth\n              className={classes.textField}\n              label=\"City\"\n              margin=\"dense\"\n              required\n              variant=\"outlined\"\n              value={city}\n              onChange={event =>\n                this.handleFieldChange('city', event.target.value)\n              }\n            />\n          </div>\n          <div className={classes.field}>\n            <FileUpload\n              className={classes.textField}\n              file={image}\n              onUpload={event => {\n                const file = event.target.files[0];\n                this.handleFieldChange('image', file);\n              }}\n            />\n          </div>\n\n          <div className={classes.field}>\n            <TextField\n              className={classes.textField}\n              label=\"Ticket Price\"\n              margin=\"dense\"\n              type=\"number\"\n              value={ticketPrice}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('ticketPrice', event.target.value)\n              }\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Seats Available\"\n              margin=\"dense\"\n              required\n              value={seatsAvailable}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('seatsAvailable', event.target.value)\n              }\n            />\n          </div>\n          {this.renderSeatFields()}\n        </form>\n\n        <Button\n          className={classes.buttonFooter}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={submitAction}>\n          {submitButton}\n        </Button>\n        {this.props.editCinema && (\n          <Button\n            color=\"secondary\"\n            className={classes.buttonFooter}\n            variant=\"contained\"\n            onClick={() => this.onSubmitAction('remove')}>\n            Delete Cinema\n          </Button>\n        )}\n\n        {notification && notification.status ? (\n          notification.status === 'success' ? (\n            <Typography\n              className={classes.infoMessage}\n              color=\"primary\"\n              variant=\"caption\">\n              {notification.message}\n            </Typography>\n          ) : (\n            <Typography\n              className={classes.infoMessage}\n              color=\"error\"\n              variant=\"caption\">\n              {notification.message}\n            </Typography>\n          )\n        ) : null}\n      </div>\n    );\n  }\n}\n\nAddCinema.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = null;\nconst mapDispatchToProps = {\n  getCinemas,\n  createCinemas,\n  updateCinemas,\n  removeCinemas\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(AddCinema));\n"]},"metadata":{},"sourceType":"module"}