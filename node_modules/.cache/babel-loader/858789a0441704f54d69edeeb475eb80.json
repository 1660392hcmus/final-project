{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/components/MovieBanner/MovieBanner.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Rating } from '@material-ui/lab';\nimport { Box, Typography, Button, makeStyles, withStyles } from '@material-ui/core';\nimport { textTruncate } from '../../../../utils';\nimport { Link } from 'react-router-dom';\nimport ArrowRightAlt from '@material-ui/icons/ArrowRightAlt';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport styles from './styles';\nconst useStyles = makeStyles(styles);\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: '#fff'\n  },\n  iconEmpty: {\n    color: '#fff'\n  }\n})(Rating);\n\nfunction MovieBanner(props) {\n  const {\n    movie,\n    fullDescription\n  } = props;\n  const classes = useStyles(props);\n  if (!movie) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.movieHero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.infoSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: classes.movieHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, fullDescription && /*#__PURE__*/React.createElement(Box, {\n    mb: 3,\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, movie.genre.split(',').map((genre, index) => /*#__PURE__*/React.createElement(Typography, {\n    key: `${genre}-${index}`,\n    className: classes.tag,\n    variant: \"body1\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, genre)), /*#__PURE__*/React.createElement(StyledRating, {\n    value: 4,\n    readOnly: true,\n    size: \"small\",\n    emptyIcon: /*#__PURE__*/React.createElement(StarBorderIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.movieTitle,\n    variant: \"h1\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, movie.title), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.descriptionText,\n    variant: \"body1\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, textTruncate(movie.description, 450)), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.director,\n    variant: \"h4\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"By: \", movie.director), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.duration,\n    variant: \"body1\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, movie.duration, \" min\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.genre,\n    variant: \"body1\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, movie.genre))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.blurBackground,\n    style: {\n      backgroundImage: `url(${movie.image})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.movieActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, fullDescription ? /*#__PURE__*/React.createElement(Link, {\n    to: `booking/${movie._id}`,\n    style: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Buy Tickets\", /*#__PURE__*/React.createElement(ArrowRightAlt, {\n    className: classes.buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Link, {\n    to: `movie/${movie._id}`,\n    style: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classnames(classes.button, classes.learnMore),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Learn More\", /*#__PURE__*/React.createElement(ArrowRightAlt, {\n    className: classes.buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default MovieBanner;","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/components/MovieBanner/MovieBanner.js"],"names":["React","classnames","Rating","Box","Typography","Button","makeStyles","withStyles","textTruncate","Link","ArrowRightAlt","StarBorderIcon","styles","useStyles","StyledRating","iconFilled","color","iconEmpty","MovieBanner","props","movie","fullDescription","classes","movieHero","infoSection","movieHeader","genre","split","map","index","tag","movieTitle","title","descriptionText","description","director","duration","blurBackground","backgroundImage","image","movieActions","_id","textDecoration","button","buttonIcon","learnMore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Rating } from '@material-ui/lab';\nimport {\n  Box,\n  Typography,\n  Button,\n  makeStyles,\n  withStyles\n} from '@material-ui/core';\nimport { textTruncate } from '../../../../utils';\nimport { Link } from 'react-router-dom';\nimport ArrowRightAlt from '@material-ui/icons/ArrowRightAlt';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport styles from './styles';\n\nconst useStyles = makeStyles(styles);\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: '#fff'\n  },\n  iconEmpty: {\n    color: '#fff'\n  }\n})(Rating);\n\nfunction MovieBanner(props) {\n  const { movie, fullDescription } = props;\n  const classes = useStyles(props);\n  if (!movie) return null;\n\n  return (\n    <div className={classes.movieHero}>\n      <div className={classes.infoSection}>\n        <header className={classes.movieHeader}>\n          {fullDescription && (\n            <Box mb={3} display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n              {movie.genre.split(',').map((genre, index) => (\n                <Typography\n                  key={`${genre}-${index}`}\n                  className={classes.tag}\n                  variant=\"body1\"\n                  color=\"inherit\">\n                  {genre}\n                </Typography>\n              ))}\n\n              <StyledRating\n                value={4}\n                readOnly\n                size=\"small\"\n                emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\n              />\n            </Box>\n          )}\n          <Typography\n            className={classes.movieTitle}\n            variant=\"h1\"\n            color=\"inherit\">\n            {movie.title}\n          </Typography>\n          <Typography\n            className={classes.descriptionText}\n            variant=\"body1\"\n            color=\"inherit\">\n            {textTruncate(movie.description, 450)}\n          </Typography>\n          <Typography className={classes.director} variant=\"h4\" color=\"inherit\">\n            By: {movie.director}\n          </Typography>\n          <Typography\n            className={classes.duration}\n            variant=\"body1\"\n            color=\"inherit\">\n            {movie.duration} min\n          </Typography>\n          <Typography className={classes.genre} variant=\"body1\" color=\"inherit\">\n            {movie.genre}\n          </Typography>\n        </header>\n      </div>\n      <div\n        className={classes.blurBackground}\n        style={{\n          backgroundImage: `url(${movie.image})`\n        }}\n      />\n      <div className={classes.movieActions}>\n        {fullDescription ? (\n          <Link to={`booking/${movie._id}`} style={{ textDecoration: 'none' }}>\n            <Button variant=\"contained\" className={classes.button}>\n              Buy Tickets\n              <ArrowRightAlt className={classes.buttonIcon} />\n            </Button>\n          </Link>\n        ) : (\n          <Link to={`movie/${movie._id}`} style={{ textDecoration: 'none' }}>\n            <Button className={classnames(classes.button, classes.learnMore)}>\n              Learn More\n              <ArrowRightAlt className={classes.buttonIcon} />\n            </Button>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieBanner;\n"]},"metadata":{},"sourceType":"module"}