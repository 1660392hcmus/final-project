{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/MovieList/components/AddMovie/AddMovie.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, Typography, Select } from '@material-ui/core';\nimport { Button, TextField, MenuItem } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport styles from './styles';\nimport { genreData, languageData } from '../../../../../data/MovieDataService';\nimport { addMovie, updateMovie, removeMovie } from '../../../../../store/actions';\nimport FileUpload from '../../../../../components/FileUpload/FileUpload';\n\nclass AddMovie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      image: null,\n      genre: [],\n      language: '',\n      duration: '',\n      description: '',\n      director: '',\n      cast: '',\n      releaseDate: new Date(),\n      endDate: new Date()\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        state: e.target.value\n      });\n    };\n\n    this.handleFieldChange = (field, value) => {\n      const newState = { ...this.state\n      };\n      newState[field] = value;\n      this.setState(newState);\n    };\n\n    this.onAddMovie = () => {\n      const {\n        image,\n        genre,\n        ...rest\n      } = this.state;\n      const movie = { ...rest,\n        genre: genre.join(',')\n      };\n      this.props.addMovie(image, movie);\n    };\n\n    this.onUpdateMovie = () => {\n      const {\n        image,\n        genre,\n        ...rest\n      } = this.state;\n      const movie = { ...rest,\n        genre: genre.join(',')\n      };\n      this.props.updateMovie(this.props.edit._id, movie, image);\n    };\n\n    this.onRemoveMovie = () => this.props.removeMovie(this.props.edit._id);\n  }\n\n  componentDidMount() {\n    if (this.props.edit) {\n      const {\n        title,\n        language,\n        genre,\n        director,\n        cast,\n        description,\n        duration,\n        releaseDate,\n        endDate\n      } = this.props.edit;\n      this.setState({\n        title,\n        language,\n        genre: genre.split(','),\n        director,\n        cast,\n        description,\n        duration,\n        releaseDate,\n        endDate\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.movie !== this.props.movie) {\n      const {\n        title,\n        genre,\n        language\n      } = this.props.movie;\n      this.setState({\n        title,\n        genre,\n        language\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      className\n    } = this.props;\n    const {\n      title,\n      image,\n      genre,\n      language,\n      duration,\n      description,\n      director,\n      cast,\n      releaseDate,\n      endDate\n    } = this.state;\n    const rootClassName = classNames(classes.root, className);\n    const subtitle = this.props.edit ? 'Edit Movie' : 'Add Movie';\n    const submitButton = this.props.edit ? 'Update Movie' : 'Save Details';\n    const submitAction = this.props.edit ? () => this.onUpdateMovie() : () => this.onAddMovie();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: rootClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, subtitle), /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      helperText: \"Please specify the title\",\n      label: \"Title\",\n      margin: \"dense\",\n      required: true,\n      value: title,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('title', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      multiple: true,\n      displayEmpty: true,\n      className: classes.textField,\n      label: \"Genre\",\n      margin: \"dense\",\n      required: true,\n      value: genre,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('genre', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, genreData.map((genreItem, index) => /*#__PURE__*/React.createElement(MenuItem, {\n      key: genreItem + '-' + index,\n      value: genreItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, genreItem)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      multiline: true,\n      className: classes.textField,\n      label: \"Description\",\n      margin: \"dense\",\n      required: true,\n      variant: \"outlined\",\n      value: description,\n      onChange: event => this.handleFieldChange('description', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      select: true,\n      className: classes.textField,\n      label: \"Language\",\n      margin: \"dense\",\n      required: true,\n      value: language,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('language', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, languageData.map((langItem, index) => /*#__PURE__*/React.createElement(MenuItem, {\n      key: langItem + '-' + index,\n      value: langItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, langItem))), /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Duration\",\n      margin: \"dense\",\n      type: \"number\",\n      value: duration,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('duration', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Director\",\n      margin: \"dense\",\n      required: true,\n      value: director,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('director', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Cast\",\n      margin: \"dense\",\n      required: true,\n      value: cast,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('cast', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      className: classes.textField,\n      inputVariant: \"outlined\",\n      margin: \"normal\",\n      id: \"release-date\",\n      label: \"Release Date\",\n      value: releaseDate,\n      onChange: date => this.handleFieldChange('releaseDate', date._d),\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      className: classes.textField,\n      inputVariant: \"outlined\",\n      margin: \"normal\",\n      id: \"end-date\",\n      label: \"End Date\",\n      value: endDate,\n      onChange: date => this.handleFieldChange('endDate', date._d),\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FileUpload, {\n      className: classes.upload,\n      file: image,\n      onUpload: event => {\n        const file = event.target.files[0];\n        this.handleFieldChange('image', file);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: classes.buttonFooter,\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: submitAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }, submitButton), this.props.edit && /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      className: classes.buttonFooter,\n      variant: \"contained\",\n      onClick: this.onRemoveMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }\n    }, \"Delete Movie\"));\n  }\n\n}\n\nAddMovie.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  movie: PropTypes.object\n};\n\nconst mapStateToProps = ({\n  movieState\n}) => ({\n  movies: movieState.movies\n});\n\nconst mapDispatchToProps = {\n  addMovie,\n  updateMovie,\n  removeMovie\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddMovie));","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/MovieList/components/AddMovie/AddMovie.js"],"names":["React","Component","classNames","PropTypes","connect","withStyles","Typography","Select","Button","TextField","MenuItem","MuiPickersUtilsProvider","KeyboardDatePicker","MomentUtils","styles","genreData","languageData","addMovie","updateMovie","removeMovie","FileUpload","AddMovie","state","title","image","genre","language","duration","description","director","cast","releaseDate","Date","endDate","handleChange","e","setState","target","value","handleFieldChange","field","newState","onAddMovie","rest","movie","join","props","onUpdateMovie","edit","_id","onRemoveMovie","componentDidMount","split","componentDidUpdate","prevProps","render","classes","className","rootClassName","root","subtitle","submitButton","submitAction","textField","event","map","genreItem","index","langItem","date","_d","upload","file","files","buttonFooter","propTypes","string","object","mapStateToProps","movieState","movies","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, Typography, Select } from '@material-ui/core';\nimport { Button, TextField, MenuItem } from '@material-ui/core';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport styles from './styles';\nimport { genreData, languageData } from '../../../../../data/MovieDataService';\nimport {\n  addMovie,\n  updateMovie,\n  removeMovie\n} from '../../../../../store/actions';\nimport FileUpload from '../../../../../components/FileUpload/FileUpload';\n\nclass AddMovie extends Component {\n  state = {\n    title: '',\n    image: null,\n    genre: [],\n    language: '',\n    duration: '',\n    description: '',\n    director: '',\n    cast: '',\n    releaseDate: new Date(),\n    endDate: new Date()\n  };\n\n  componentDidMount() {\n    if (this.props.edit) {\n      const {\n        title,\n        language,\n        genre,\n        director,\n        cast,\n        description,\n        duration,\n        releaseDate,\n        endDate\n      } = this.props.edit;\n      this.setState({\n        title,\n        language,\n        genre: genre.split(','),\n        director,\n        cast,\n        description,\n        duration,\n        releaseDate,\n        endDate\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.movie !== this.props.movie) {\n      const { title, genre, language } = this.props.movie;\n      this.setState({ title, genre, language });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      state: e.target.value\n    });\n  };\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n    newState[field] = value;\n    this.setState(newState);\n  };\n\n  onAddMovie = () => {\n    const { image, genre, ...rest } = this.state;\n    const movie = { ...rest, genre: genre.join(',') };\n    this.props.addMovie(image, movie);\n  };\n\n  onUpdateMovie = () => {\n    const { image, genre, ...rest } = this.state;\n    const movie = { ...rest, genre: genre.join(',') };\n    this.props.updateMovie(this.props.edit._id, movie, image);\n  };\n\n  onRemoveMovie = () => this.props.removeMovie(this.props.edit._id);\n\n  render() {\n    const { classes, className } = this.props;\n    const {\n      title,\n      image,\n      genre,\n      language,\n      duration,\n      description,\n      director,\n      cast,\n      releaseDate,\n      endDate\n    } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n    const subtitle = this.props.edit ? 'Edit Movie' : 'Add Movie';\n    const submitButton = this.props.edit ? 'Update Movie' : 'Save Details';\n    const submitAction = this.props.edit\n      ? () => this.onUpdateMovie()\n      : () => this.onAddMovie();\n\n    return (\n      <div className={rootClassName}>\n        <Typography variant=\"h4\" className={classes.title}>\n          {subtitle}\n        </Typography>\n        <form autoComplete=\"off\" noValidate>\n          <div className={classes.field}>\n            <TextField\n              className={classes.textField}\n              helperText=\"Please specify the title\"\n              label=\"Title\"\n              margin=\"dense\"\n              required\n              value={title}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('title', event.target.value)\n              }\n            />\n          </div>\n          <div className={classes.field}>\n            <Select\n              multiple\n              displayEmpty\n              className={classes.textField}\n              label=\"Genre\"\n              margin=\"dense\"\n              required\n              value={genre}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('genre', event.target.value)\n              }>\n              {genreData.map((genreItem, index) => (\n                <MenuItem key={genreItem + '-' + index} value={genreItem}>\n                  {genreItem}\n                </MenuItem>\n              ))}\n            </Select>\n          </div>\n          <div className={classes.field}>\n            <TextField\n              fullWidth\n              multiline\n              className={classes.textField}\n              label=\"Description\"\n              margin=\"dense\"\n              required\n              variant=\"outlined\"\n              value={description}\n              onChange={event =>\n                this.handleFieldChange('description', event.target.value)\n              }\n            />\n          </div>\n          <div className={classes.field}>\n            <TextField\n              select\n              className={classes.textField}\n              label=\"Language\"\n              margin=\"dense\"\n              required\n              value={language}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('language', event.target.value)\n              }>\n              {languageData.map((langItem, index) => (\n                <MenuItem key={langItem + '-' + index} value={langItem}>\n                  {langItem}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              className={classes.textField}\n              label=\"Duration\"\n              margin=\"dense\"\n              type=\"number\"\n              value={duration}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('duration', event.target.value)\n              }\n            />\n          </div>\n          <div className={classes.field}>\n            <TextField\n              className={classes.textField}\n              label=\"Director\"\n              margin=\"dense\"\n              required\n              value={director}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('director', event.target.value)\n              }\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Cast\"\n              margin=\"dense\"\n              required\n              value={cast}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('cast', event.target.value)\n              }\n            />\n          </div>\n          <div className={classes.field}>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <KeyboardDatePicker\n                className={classes.textField}\n                inputVariant=\"outlined\"\n                margin=\"normal\"\n                id=\"release-date\"\n                label=\"Release Date\"\n                value={releaseDate}\n                onChange={date =>\n                  this.handleFieldChange('releaseDate', date._d)\n                }\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n\n              <KeyboardDatePicker\n                className={classes.textField}\n                inputVariant=\"outlined\"\n                margin=\"normal\"\n                id=\"end-date\"\n                label=\"End Date\"\n                value={endDate}\n                onChange={date => this.handleFieldChange('endDate', date._d)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n          <div className={classes.field}>\n            <FileUpload\n              className={classes.upload}\n              file={image}\n              onUpload={event => {\n                const file = event.target.files[0];\n                this.handleFieldChange('image', file);\n              }}\n            />\n          </div>\n        </form>\n\n        <Button\n          className={classes.buttonFooter}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={submitAction}>\n          {submitButton}\n        </Button>\n        {this.props.edit && (\n          <Button\n            color=\"secondary\"\n            className={classes.buttonFooter}\n            variant=\"contained\"\n            onClick={this.onRemoveMovie}>\n            Delete Movie\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  movie: PropTypes.object\n};\n\nconst mapStateToProps = ({ movieState }) => ({\n  movies: movieState.movies\n});\n\nconst mapDispatchToProps = { addMovie, updateMovie, removeMovie };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(AddMovie));\n"]},"metadata":{},"sourceType":"module"}