{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/BookingPage/components/BookingForm/BookingForm.js\";\nimport React from 'react';\nimport { Grid, Box, TextField, MenuItem, Typography } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nexport default function BookingForm(props) {\n  const {\n    cinemas,\n    showtimes,\n    selectedCinema,\n    onChangeCinema,\n    selectedDate,\n    onChangeDate,\n    times,\n    selectedTime,\n    onChangeTime\n  } = props;\n  const showtime = showtimes.find(showtime => showtime.cinemaId === selectedCinema);\n  if (!cinemas.length) return /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    width: 1,\n    height: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h2\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"No Cinema Available.\"));\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    value: selectedCinema,\n    label: \"Select Cinema\",\n    variant: \"outlined\",\n    onChange: onChangeCinema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, cinemas.map(cinema => /*#__PURE__*/React.createElement(MenuItem, {\n    key: cinema._id,\n    value: cinema._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, cinema.name)))), showtime && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    inputVariant: \"outlined\",\n    margin: \"none\",\n    fullWidth: true,\n    id: \"start-date\",\n    label: \"Start Date\",\n    minDate: new Date(showtime.startDate),\n    maxDate: new Date(showtime.endDate),\n    value: selectedDate,\n    onChange: date => onChangeDate(date._d),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }))), selectedDate && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    value: selectedTime,\n    label: \"Select Time\",\n    variant: \"outlined\",\n    onChange: onChangeTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, times.map((time, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: time + '-' + index,\n    value: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, time)))));\n}","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/BookingPage/components/BookingForm/BookingForm.js"],"names":["React","Grid","Box","TextField","MenuItem","Typography","MuiPickersUtilsProvider","KeyboardDatePicker","MomentUtils","BookingForm","props","cinemas","showtimes","selectedCinema","onChangeCinema","selectedDate","onChangeDate","times","selectedTime","onChangeTime","showtime","find","cinemaId","length","map","cinema","_id","name","Date","startDate","endDate","date","_d","time","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Box, TextField, MenuItem, Typography } from '@material-ui/core';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\n\nexport default function BookingForm(props) {\n  const {\n    cinemas,\n    showtimes,\n    selectedCinema,\n    onChangeCinema,\n    selectedDate,\n    onChangeDate,\n    times,\n    selectedTime,\n    onChangeTime\n  } = props;\n\n  const showtime = showtimes.find(\n    showtime => showtime.cinemaId === selectedCinema\n  );\n\n  if (!cinemas.length)\n    return (\n      <Box\n        display=\"flex\"\n        width={1}\n        height={1}\n        alignItems=\"center\"\n        justifyContent=\"center\">\n        <Typography align=\"center\" variant=\"h2\" color=\"inherit\">\n          No Cinema Available.\n        </Typography>\n      </Box>\n    );\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs>\n        <TextField\n          fullWidth\n          select\n          value={selectedCinema}\n          label=\"Select Cinema\"\n          variant=\"outlined\"\n          onChange={onChangeCinema}>\n          {cinemas.map(cinema => (\n            <MenuItem key={cinema._id} value={cinema._id}>\n              {cinema.name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      {showtime && (\n        <Grid item xs>\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              inputVariant=\"outlined\"\n              margin=\"none\"\n              fullWidth\n              id=\"start-date\"\n              label=\"Start Date\"\n              minDate={new Date(showtime.startDate)}\n              maxDate={new Date(showtime.endDate)}\n              value={selectedDate}\n              onChange={date => onChangeDate(date._d)}\n              KeyboardButtonProps={{\n                'aria-label': 'change date'\n              }}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n      )}\n      {selectedDate && (\n        <Grid item xs>\n          <TextField\n            fullWidth\n            select\n            value={selectedTime}\n            label=\"Select Time\"\n            variant=\"outlined\"\n            onChange={onChangeTime}>\n            {times.map((time, index) => (\n              <MenuItem key={time + '-' + index} value={time}>\n                {time}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}