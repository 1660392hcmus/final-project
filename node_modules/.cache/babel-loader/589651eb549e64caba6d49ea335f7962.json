{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from '../types';\nconst initialState = {\n  alerts: [],\n  showAlert: false\n};\n\nconst setAlert = (state, {\n  payload\n}) => ({ ...state,\n  alerts: [...state.alerts, payload],\n  showAlert: true\n});\n\nconst removeAlert = (state, {\n  payload\n}) => ({ ...state,\n  alerts: [...state.alerts].filter(alert => alert.id !== payload),\n  showAlert: false\n});\n\nexport default function (state = initialState, action) {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return setAlert(state, action);\n\n    case REMOVE_ALERT:\n      return removeAlert(state, action);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/store/reducers/alert.js"],"names":["SET_ALERT","REMOVE_ALERT","initialState","alerts","showAlert","setAlert","state","payload","removeAlert","filter","alert","id","action","type"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,MAAyB,EACxC,GAAGD,KADqC;AAExCH,EAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,OAAlB,CAFgC;AAGxCH,EAAAA,SAAS,EAAE;AAH6B,CAAzB,CAAjB;;AAMA,MAAMI,WAAW,GAAG,CAACF,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,MAAyB,EAC3C,GAAGD,KADwC;AAE3CH,EAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBM,MAAlB,CAAyBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaJ,OAA/C,CAFmC;AAG3CH,EAAAA,SAAS,EAAE;AAHgC,CAAzB,CAApB;;AAMA,eAAe,UAASE,KAAK,GAAGJ,YAAjB,EAA+BU,MAA/B,EAAuC;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;;AACA,UAAQC,IAAR;AACE,SAAKb,SAAL;AACE,aAAOK,QAAQ,CAACC,KAAD,EAAQM,MAAR,CAAf;;AACF,SAAKX,YAAL;AACE,aAAOO,WAAW,CAACF,KAAD,EAAQM,MAAR,CAAlB;;AACF;AACE,aAAON,KAAP;AANJ;AAQD","sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst initialState = {\n  alerts: [],\n  showAlert: false\n};\n\nconst setAlert = (state, { payload }) => ({\n  ...state,\n  alerts: [...state.alerts, payload],\n  showAlert: true\n});\n\nconst removeAlert = (state, { payload }) => ({\n  ...state,\n  alerts: [...state.alerts].filter(alert => alert.id !== payload),\n  showAlert: false\n});\n\nexport default function(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case SET_ALERT:\n      return setAlert(state, action);\n    case REMOVE_ALERT:\n      return removeAlert(state, action);\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}