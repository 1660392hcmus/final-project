{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/User/components/AddUser/AddUser.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, Typography } from '@material-ui/core';\nimport { Button, TextField, MenuItem } from '@material-ui/core';\nimport styles from './styles';\nimport { addShowtime, updateShowtime } from '../../../../../store/actions';\n\nclass AddUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      username: '',\n      email: '',\n      password: '',\n      role: '',\n      phone: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        state: e.target.value\n      });\n    };\n\n    this.handleFieldChange = (field, value) => {\n      const newState = { ...this.state\n      };\n      newState[field] = value;\n      this.setState(newState);\n    };\n\n    this.onAddUser = () => {\n      const user = { ...this.state\n      };\n      this.props.addUser(user);\n    };\n\n    this.onUpdateUser = () => {\n      const user = { ...this.state\n      };\n      this.props.updateUser(user, this.props.selectedUser._id);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.selectedUser) {\n      const {\n        name,\n        username,\n        email,\n        password,\n        role,\n        phone\n      } = this.props.selectedUser;\n      this.setState({\n        name,\n        username,\n        email,\n        password,\n        role,\n        phone\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      className,\n      selectedUser\n    } = this.props;\n    const {\n      name,\n      username,\n      email,\n      password,\n      role,\n      phone\n    } = this.state;\n    const rootClassName = classNames(classes.root, className);\n    const title = selectedUser ? 'Edit User' : 'Add User';\n    const submitButton = selectedUser ? 'Update User' : 'Add User';\n    const submitAction = selectedUser ? () => this.onUpdateUser() : () => this.onAddUser();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: rootClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      className: classes.textField,\n      helperText: \"Please specify the Full Name\",\n      label: \"Full Name\",\n      margin: \"dense\",\n      required: true,\n      value: name,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('name', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      className: classes.textField,\n      label: \"Username\",\n      margin: \"dense\",\n      required: true,\n      value: username,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('username', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      className: classes.textField,\n      label: \"Email\",\n      margin: \"dense\",\n      required: true,\n      value: email,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('email', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      className: classes.textField,\n      label: \"Password\",\n      margin: \"dense\",\n      required: true,\n      value: password,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('password', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      className: classes.textField,\n      label: \"Phone\",\n      margin: \"dense\",\n      required: true,\n      value: phone,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('phone', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      select: true,\n      className: classes.textField,\n      helperText: \"Admin or Guest\",\n      label: \"Role\",\n      margin: \"dense\",\n      required: true,\n      value: role,\n      variant: \"outlined\",\n      onChange: event => this.handleFieldChange('role', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, ['admin', 'guest'].map(role => /*#__PURE__*/React.createElement(MenuItem, {\n      key: `role-${role}`,\n      value: role,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, role))))), /*#__PURE__*/React.createElement(Button, {\n      className: classes.buttonFooter,\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: submitAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, submitButton));\n  }\n\n}\n\nAddUser.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({\n  movieState,\n  cinemaState\n}) => ({\n  movies: movieState.movies,\n  nowShowing: movieState.nowShowing,\n  cinemas: cinemaState.cinemas\n});\n\nconst mapDispatchToProps = {\n  addShowtime,\n  updateShowtime\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddUser));","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/User/components/AddUser/AddUser.js"],"names":["React","Component","classNames","PropTypes","connect","withStyles","Typography","Button","TextField","MenuItem","styles","addShowtime","updateShowtime","AddUser","state","name","username","email","password","role","phone","handleChange","e","setState","target","value","handleFieldChange","field","newState","onAddUser","user","props","addUser","onUpdateUser","updateUser","selectedUser","_id","componentDidMount","render","classes","className","rootClassName","root","title","submitButton","submitAction","textField","event","map","buttonFooter","propTypes","string","object","isRequired","mapStateToProps","movieState","cinemaState","movies","nowShowing","cinemas","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, Typography } from '@material-ui/core';\nimport { Button, TextField, MenuItem } from '@material-ui/core';\nimport styles from './styles';\nimport { addShowtime, updateShowtime } from '../../../../../store/actions';\n\nclass AddUser extends Component {\n  state = {\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n    role: '',\n    phone: ''\n  };\n\n  componentDidMount() {\n    if (this.props.selectedUser) {\n      const {\n        name,\n        username,\n        email,\n        password,\n        role,\n        phone\n      } = this.props.selectedUser;\n      this.setState({\n        name,\n        username,\n        email,\n        password,\n        role,\n        phone\n      });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      state: e.target.value\n    });\n  };\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n    newState[field] = value;\n    this.setState(newState);\n  };\n\n  onAddUser = () => {\n    const user = { ...this.state };\n    this.props.addUser(user);\n  };\n\n  onUpdateUser = () => {\n    const user = { ...this.state };\n    this.props.updateUser(user, this.props.selectedUser._id);\n  };\n\n  render() {\n    const { classes, className, selectedUser } = this.props;\n    const { name, username, email, password, role, phone } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n    const title = selectedUser ? 'Edit User' : 'Add User';\n    const submitButton = selectedUser ? 'Update User' : 'Add User';\n    const submitAction = selectedUser\n      ? () => this.onUpdateUser()\n      : () => this.onAddUser();\n\n    return (\n      <div className={rootClassName}>\n        <Typography variant=\"h4\" className={classes.title}>\n          {title}\n        </Typography>\n        <form autoComplete=\"off\" noValidate>\n          <div className={classes.field}>\n            <TextField\n              fullWidth\n              className={classes.textField}\n              helperText=\"Please specify the Full Name\"\n              label=\"Full Name\"\n              margin=\"dense\"\n              required\n              value={name}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('name', event.target.value)\n              }\n            />\n            <TextField\n              fullWidth\n              className={classes.textField}\n              label=\"Username\"\n              margin=\"dense\"\n              required\n              value={username}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('username', event.target.value)\n              }\n            />\n          </div>\n          <div className={classes.field}>\n            <TextField\n              fullWidth\n              className={classes.textField}\n              label=\"Email\"\n              margin=\"dense\"\n              required\n              value={email}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('email', event.target.value)\n              }\n            />\n            <TextField\n              fullWidth\n              className={classes.textField}\n              label=\"Password\"\n              margin=\"dense\"\n              required\n              value={password}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('password', event.target.value)\n              }\n            />\n          </div>\n          <div className={classes.field}>\n            <TextField\n              fullWidth\n              className={classes.textField}\n              label=\"Phone\"\n              margin=\"dense\"\n              required\n              value={phone}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('phone', event.target.value)\n              }\n            />\n            <TextField\n              fullWidth\n              select\n              className={classes.textField}\n              helperText=\"Admin or Guest\"\n              label=\"Role\"\n              margin=\"dense\"\n              required\n              value={role}\n              variant=\"outlined\"\n              onChange={event =>\n                this.handleFieldChange('role', event.target.value)\n              }>\n              {['admin', 'guest'].map(role => (\n                <MenuItem key={`role-${role}`} value={role}>\n                  {role}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n        </form>\n\n        <Button\n          className={classes.buttonFooter}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={submitAction}>\n          {submitButton}\n        </Button>\n      </div>\n    );\n  }\n}\n\nAddUser.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({ movieState, cinemaState }) => ({\n  movies: movieState.movies,\n  nowShowing: movieState.nowShowing,\n  cinemas: cinemaState.cinemas\n});\n\nconst mapDispatchToProps = { addShowtime, updateShowtime };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(AddUser));\n"]},"metadata":{},"sourceType":"module"}