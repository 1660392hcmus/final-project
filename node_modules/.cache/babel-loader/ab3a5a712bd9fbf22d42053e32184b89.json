{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/ShowtimeList/ShowtimeList.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, Typography } from '@material-ui/core';\nimport styles from './styles';\nimport { AddShowtime, ShowtimesToolbar, ShowtimesTable } from './components';\nimport { getShowtimes, toggleDialog, selectShowtime, selectAllShowtimes, deleteShowtime } from '../../../store/actions';\nimport { ResponsiveDialog } from '../../../components';\n\nclass ShowtimeList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteShowtime = () => {\n      const {\n        selectedShowtimes,\n        deleteShowtime\n      } = this.props;\n      selectedShowtimes.forEach(element => deleteShowtime(element));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      showtimes,\n      getShowtimes\n    } = this.props;\n    if (!showtimes.length) getShowtimes();\n  }\n\n  render() {\n    const {\n      classes,\n      showtimes,\n      selectedShowtimes,\n      openDialog,\n      toggleDialog,\n      selectShowtime,\n      selectAllShowtimes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ShowtimesToolbar, {\n      showtimes: showtimes,\n      toggleDialog: toggleDialog,\n      selectedShowtimes: selectedShowtimes,\n      deleteShowtime: this.handleDeleteShowtime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, !showtimes.length ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"There are no showtimes\") : /*#__PURE__*/React.createElement(ShowtimesTable, {\n      onSelectShowtime: selectShowtime,\n      selectedShowtimes: selectedShowtimes,\n      selectAllShowtimes: selectAllShowtimes,\n      showtimes: showtimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(ResponsiveDialog, {\n      id: \"Add-showtime\",\n      open: openDialog,\n      handleClose: () => toggleDialog(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddShowtime, {\n      selectedShowtime: showtimes.find(showtime => showtime._id === selectedShowtimes[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nShowtimeList.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({\n  showtimeState\n}) => ({\n  openDialog: showtimeState.openDialog,\n  showtimes: showtimeState.showtimes,\n  selectedShowtimes: showtimeState.selectedShowtimes\n});\n\nconst mapDispatchToProps = {\n  getShowtimes,\n  toggleDialog,\n  selectShowtime,\n  selectAllShowtimes,\n  deleteShowtime\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ShowtimeList));","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/ShowtimeList/ShowtimeList.js"],"names":["React","Component","PropTypes","connect","withStyles","Typography","styles","AddShowtime","ShowtimesToolbar","ShowtimesTable","getShowtimes","toggleDialog","selectShowtime","selectAllShowtimes","deleteShowtime","ResponsiveDialog","ShowtimeList","handleDeleteShowtime","selectedShowtimes","props","forEach","element","componentDidMount","showtimes","length","render","classes","openDialog","root","content","find","showtime","_id","propTypes","className","string","object","isRequired","mapStateToProps","showtimeState","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles, Typography } from '@material-ui/core';\nimport styles from './styles';\nimport { AddShowtime, ShowtimesToolbar, ShowtimesTable } from './components';\nimport {\n  getShowtimes,\n  toggleDialog,\n  selectShowtime,\n  selectAllShowtimes,\n  deleteShowtime\n} from '../../../store/actions';\nimport { ResponsiveDialog } from '../../../components';\n\nclass ShowtimeList extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    const { showtimes, getShowtimes } = this.props;\n    if (!showtimes.length) getShowtimes();\n  }\n\n  handleDeleteShowtime = () => {\n    const { selectedShowtimes, deleteShowtime } = this.props;\n    selectedShowtimes.forEach(element => deleteShowtime(element));\n  };\n\n  render() {\n    const {\n      classes,\n      showtimes,\n      selectedShowtimes,\n      openDialog,\n      toggleDialog,\n      selectShowtime,\n      selectAllShowtimes\n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <ShowtimesToolbar\n          showtimes={showtimes}\n          toggleDialog={toggleDialog}\n          selectedShowtimes={selectedShowtimes}\n          deleteShowtime={this.handleDeleteShowtime}\n        />\n        <div className={classes.content}>\n          {!showtimes.length ? (\n            <Typography variant=\"h6\">There are no showtimes</Typography>\n          ) : (\n            <ShowtimesTable\n              onSelectShowtime={selectShowtime}\n              selectedShowtimes={selectedShowtimes}\n              selectAllShowtimes={selectAllShowtimes}\n              showtimes={showtimes}\n            />\n          )}\n        </div>\n        <ResponsiveDialog\n          id=\"Add-showtime\"\n          open={openDialog}\n          handleClose={() => toggleDialog()}>\n          <AddShowtime\n            selectedShowtime={showtimes.find(\n              showtime => showtime._id === selectedShowtimes[0]\n            )}\n          />\n        </ResponsiveDialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ showtimeState }) => ({\n  openDialog: showtimeState.openDialog,\n  showtimes: showtimeState.showtimes,\n  selectedShowtimes: showtimeState.selectedShowtimes\n});\n\nconst mapDispatchToProps = {\n  getShowtimes,\n  toggleDialog,\n  selectShowtime,\n  selectAllShowtimes,\n  deleteShowtime\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ShowtimeList));\n"]},"metadata":{},"sourceType":"module"}