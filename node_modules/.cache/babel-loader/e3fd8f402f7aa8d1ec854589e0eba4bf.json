{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles, Grid } from '@material-ui/core';\nimport { TotalUsers, TotalCinemas, TotalMovies, TotalReservations, BestMovies, UsersByDevice } from './components';\nimport { getUsers, getCinemas, getMovies, getReservations } from '../../../store/actions';\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    padding: theme.spacing(4)\n  }\n});\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getBestMovies = (reservations, movies, total = 5) => {\n      const reservationCounter = reservations.map(reservation => ({\n        movieId: reservation.movieId,\n        count: reservations.filter(r => r.movieId === reservation.movieId).length\n      }));\n      const result = [];\n      const map = new Map();\n\n      for (const item of reservationCounter) {\n        if (!map.has(item.movieId)) {\n          map.set(item.movieId, true); // set any value to Map\n\n          result.push({\n            movieId: item.movieId,\n            count: item.count\n          });\n        }\n      }\n\n      return result.sort((a, b) => b.count - a.count).slice(0, total).map(res => ({\n        movie: movies.find(movie => movie._id === res.movieId),\n        count: res.count\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers();\n    this.props.getCinemas();\n    this.props.getMovies();\n    this.props.getReservations();\n  }\n\n  render() {\n    const {\n      classes,\n      users,\n      cinemas,\n      movies,\n      reservations\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 6,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TotalUsers, {\n      users: users.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 6,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TotalCinemas, {\n      cinemas: cinemas.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 6,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TotalMovies, {\n      movies: movies.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      sm: 6,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TotalReservations, {\n      reservations: reservations.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 8,\n      md: 12,\n      xl: 9,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BestMovies, {\n      bestMovies: this.getBestMovies(reservations, movies, 5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 4,\n      md: 6,\n      xl: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(UsersByDevice, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  userState,\n  cinemaState,\n  movieState,\n  reservationState\n}) => ({\n  users: userState.users,\n  cinemas: cinemaState.cinemas,\n  movies: movieState.movies,\n  reservations: reservationState.reservations\n});\n\nconst mapDispatchToProps = {\n  getUsers,\n  getCinemas,\n  getMovies,\n  getReservations\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard));","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/Dashboard/Dashboard.js"],"names":["React","Component","connect","withStyles","Grid","TotalUsers","TotalCinemas","TotalMovies","TotalReservations","BestMovies","UsersByDevice","getUsers","getCinemas","getMovies","getReservations","styles","theme","root","textAlign","padding","spacing","Dashboard","getBestMovies","reservations","movies","total","reservationCounter","map","reservation","movieId","count","filter","r","length","result","Map","item","has","set","push","sort","a","b","slice","res","movie","find","_id","componentDidMount","props","render","classes","users","cinemas","mapStateToProps","userState","cinemaState","movieState","reservationState","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,mBAAjC;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,iBAJF,EAKEC,UALF,EAMEC,aANF,QAOO,cAPP;AAQA,SACEC,QADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,eAJF,QAKO,wBALP;;AAOA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,QADP;AAEJC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFL;AADiB,CAAL,CAApB;;AAOA,MAAMC,SAAN,SAAwBpB,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAQhCqB,aARgC,GAQhB,CAACC,YAAD,EAAeC,MAAf,EAAuBC,KAAK,GAAG,CAA/B,KAAqC;AACnD,YAAMC,kBAAkB,GAAGH,YAAY,CAACI,GAAb,CAAiBC,WAAW,KAAK;AAC1DC,QAAAA,OAAO,EAAED,WAAW,CAACC,OADqC;AAE1DC,QAAAA,KAAK,EAAEP,YAAY,CAACQ,MAAb,CAAoBC,CAAC,IAAIA,CAAC,CAACH,OAAF,KAAcD,WAAW,CAACC,OAAnD,EAA4DI;AAFT,OAAL,CAA5B,CAA3B;AAKA,YAAMC,MAAM,GAAG,EAAf;AACA,YAAMP,GAAG,GAAG,IAAIQ,GAAJ,EAAZ;;AACA,WAAK,MAAMC,IAAX,IAAmBV,kBAAnB,EAAuC;AACrC,YAAI,CAACC,GAAG,CAACU,GAAJ,CAAQD,IAAI,CAACP,OAAb,CAAL,EAA4B;AAC1BF,UAAAA,GAAG,CAACW,GAAJ,CAAQF,IAAI,CAACP,OAAb,EAAsB,IAAtB,EAD0B,CACG;;AAC7BK,UAAAA,MAAM,CAACK,IAAP,CAAY;AACVV,YAAAA,OAAO,EAAEO,IAAI,CAACP,OADJ;AAEVC,YAAAA,KAAK,EAAEM,IAAI,CAACN;AAFF,WAAZ;AAID;AACF;;AACD,aAAOI,MAAM,CACVM,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACZ,KAAF,GAAUW,CAAC,CAACX,KADvB,EAEJa,KAFI,CAEE,CAFF,EAEKlB,KAFL,EAGJE,GAHI,CAGAiB,GAAG,KAAK;AACXC,QAAAA,KAAK,EAAErB,MAAM,CAACsB,IAAP,CAAYD,KAAK,IAAIA,KAAK,CAACE,GAAN,KAAcH,GAAG,CAACf,OAAvC,CADI;AAEXC,QAAAA,KAAK,EAAEc,GAAG,CAACd;AAFA,OAAL,CAHH,CAAP;AAOD,KAhC+B;AAAA;;AAChCkB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWtC,QAAX;AACA,SAAKsC,KAAL,CAAWrC,UAAX;AACA,SAAKqC,KAAL,CAAWpC,SAAX;AACA,SAAKoC,KAAL,CAAWnC,eAAX;AACD;;AA4BDoC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA,OAAlB;AAA2B7B,MAAAA,MAA3B;AAAmCD,MAAAA;AAAnC,QAAoD,KAAK0B,KAA/D;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEE,OAAO,CAAClC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEmC,KAAK,CAACnB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEoB,OAAO,CAACpB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,eAOE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAET,MAAM,CAACS,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,eAUE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAmB,MAAA,YAAY,EAAEV,YAAY,CAACU,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,eAaE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAE,KAAKX,aAAL,CAAmBC,YAAnB,EAAiCC,MAAjC,EAAyC,CAAzC,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,eAkBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,CADF,CADF;AA0BD;;AA/D+B;;AAkElC,MAAM8B,eAAe,GAAG,CAAC;AACvBC,EAAAA,SADuB;AAEvBC,EAAAA,WAFuB;AAGvBC,EAAAA,UAHuB;AAIvBC,EAAAA;AAJuB,CAAD,MAKjB;AACLN,EAAAA,KAAK,EAAEG,SAAS,CAACH,KADZ;AAELC,EAAAA,OAAO,EAAEG,WAAW,CAACH,OAFhB;AAGL7B,EAAAA,MAAM,EAAEiC,UAAU,CAACjC,MAHd;AAILD,EAAAA,YAAY,EAAEmC,gBAAgB,CAACnC;AAJ1B,CALiB,CAAxB;;AAWA,MAAMoC,kBAAkB,GAAG;AACzBhD,EAAAA,QADyB;AAEzBC,EAAAA,UAFyB;AAGzBC,EAAAA,SAHyB;AAIzBC,EAAAA;AAJyB,CAA3B;AAMA,eAAeZ,OAAO,CACpBoD,eADoB,EAEpBK,kBAFoB,CAAP,CAGbxD,UAAU,CAACY,MAAD,CAAV,CAAmBM,SAAnB,CAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles, Grid } from '@material-ui/core';\nimport {\n  TotalUsers,\n  TotalCinemas,\n  TotalMovies,\n  TotalReservations,\n  BestMovies,\n  UsersByDevice\n} from './components';\nimport {\n  getUsers,\n  getCinemas,\n  getMovies,\n  getReservations\n} from '../../../store/actions';\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    padding: theme.spacing(4)\n  }\n});\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getUsers();\n    this.props.getCinemas();\n    this.props.getMovies();\n    this.props.getReservations();\n  }\n\n  getBestMovies = (reservations, movies, total = 5) => {\n    const reservationCounter = reservations.map(reservation => ({\n      movieId: reservation.movieId,\n      count: reservations.filter(r => r.movieId === reservation.movieId).length\n    }));\n\n    const result = [];\n    const map = new Map();\n    for (const item of reservationCounter) {\n      if (!map.has(item.movieId)) {\n        map.set(item.movieId, true); // set any value to Map\n        result.push({\n          movieId: item.movieId,\n          count: item.count\n        });\n      }\n    }\n    return result\n      .sort((a, b) => b.count - a.count)\n      .slice(0, total)\n      .map(res => ({\n        movie: movies.find(movie => movie._id === res.movieId),\n        count: res.count\n      }));\n  };\n\n  render() {\n    const { classes, users, cinemas, movies, reservations } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={4}>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <TotalUsers users={users.length} />\n          </Grid>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <TotalCinemas cinemas={cinemas.length} />\n          </Grid>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <TotalMovies movies={movies.length} />\n          </Grid>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <TotalReservations reservations={reservations.length} />\n          </Grid>\n          <Grid item lg={8} md={12} xl={9} xs={12}>\n            <BestMovies\n              bestMovies={this.getBestMovies(reservations, movies, 5)}\n            />\n          </Grid>\n          <Grid item lg={4} md={6} xl={3} xs={12}>\n            <UsersByDevice />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  userState,\n  cinemaState,\n  movieState,\n  reservationState\n}) => ({\n  users: userState.users,\n  cinemas: cinemaState.cinemas,\n  movies: movieState.movies,\n  reservations: reservationState.reservations\n});\nconst mapDispatchToProps = {\n  getUsers,\n  getCinemas,\n  getMovies,\n  getReservations\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Dashboard));\n"]},"metadata":{},"sourceType":"module"}