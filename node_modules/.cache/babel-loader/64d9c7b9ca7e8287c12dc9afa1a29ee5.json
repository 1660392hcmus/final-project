{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/BookingPage/components/BookingInvitation/BookingInvitation.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, TextField, Grid, Button, Box } from '@material-ui/core';\nimport { Paper } from '../../../../../components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    padding: theme.spacing(4)\n  },\n  gridContainer: {\n    marginTop: theme.spacing(4)\n  },\n  successInfo: {\n    margin: theme.spacing(3)\n  },\n  ignoreButton: {\n    marginLeft: theme.spacing(3)\n  }\n}));\n\nconst convertToAlphabet = value => (value + 10).toString(36).toUpperCase();\n\nexport default function BookingInvitation(props) {\n  const classes = useStyles(props);\n  const {\n    selectedSeats,\n    sendInvitations,\n    ignore,\n    invitations,\n    onSetInvitation,\n    onDownloadPDF\n  } = props;\n  const notValidInvitations = !Object.keys(invitations).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Guest Invitation\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.successInfo,\n    variant: \"body1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"You have successfuly booked your seats. Please fill the emails below, to send invitations to your friends!\"), /*#__PURE__*/React.createElement(Box, {\n    width: 1,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\",\n    onClick: () => onDownloadPDF(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Download Pass\")), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.gridContainer,\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, selectedSeats.map((seat, index) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    key: 'seat-' + index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"email\",\n    name: `${convertToAlphabet(seat[0])}-${seat[1]}`,\n    helperText: `Please select an Email for Row : ${convertToAlphabet(seat[0])} - Seat Number : ${seat[1]}`,\n    margin: \"dense\",\n    required: true,\n    value: invitations[`${convertToAlphabet(seat[0])}-${seat[1]}`] || '',\n    variant: \"outlined\",\n    onChange: event => onSetInvitation(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: notValidInvitations,\n    color: \"primary\",\n    variant: \"outlined\",\n    onClick: () => sendInvitations(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Send Invitations\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.ignoreButton,\n    color: \"secondary\",\n    variant: \"outlined\",\n    onClick: () => ignore(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Ignore\"))))));\n}","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Public/BookingPage/components/BookingInvitation/BookingInvitation.js"],"names":["React","makeStyles","Typography","TextField","Grid","Button","Box","Paper","useStyles","theme","root","marginTop","spacing","paper","padding","gridContainer","successInfo","margin","ignoreButton","marginLeft","convertToAlphabet","value","toString","toUpperCase","BookingInvitation","props","classes","selectedSeats","sendInvitations","ignore","invitations","onSetInvitation","onDownloadPDF","notValidInvitations","Object","keys","length","map","seat","index","event"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8CC,GAA9C,QAAyD,mBAAzD;AACA,SAASC,KAAT,QAAsB,2BAAtB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADP,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,OAAO,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;AAAX,GAJ8B;AAKrCG,EAAAA,aAAa,EAAE;AACbJ,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADE,GALsB;AAQrCI,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd;AAAV,GARwB;AASrCM,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd;AADA;AATuB,CAAL,CAAN,CAA5B;;AAcA,MAAMQ,iBAAiB,GAAGC,KAAK,IAAI,CAACA,KAAK,GAAG,EAAT,EAAaC,QAAb,CAAsB,EAAtB,EAA0BC,WAA1B,EAAnC;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,QAAMC,OAAO,GAAGlB,SAAS,CAACiB,KAAD,CAAzB;AACA,QAAM;AACJE,IAAAA,aADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,eALI;AAMJC,IAAAA;AANI,MAOFP,KAPJ;AASA,QAAMQ,mBAAmB,GAAG,CAACC,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,MAAtD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAChB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEgB,OAAO,CAACb,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEa,OAAO,CAACV,WADrB;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAJF,eAWE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE,CAAZ;AAAe,IAAA,SAAS,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,OAAO,EAAE,MAAMgB,aAAa,EAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAXF,eAmBE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEN,OAAO,CAACX,aAAzB;AAAwC,IAAA,SAAS,MAAjD;AAAkD,IAAA,OAAO,EAAE,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,aAAa,CAACU,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBACjB,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,GAAG,EAAE,UAAUA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,IAAI,EAAG,GAAEnB,iBAAiB,CAACkB,IAAI,CAAC,CAAD,CAAL,CAAU,IAAGA,IAAI,CAAC,CAAD,CAAI,EAHjD;AAIE,IAAA,UAAU,EAAG,oCAAmClB,iBAAiB,CAC/DkB,IAAI,CAAC,CAAD,CAD2D,CAE/D,oBAAmBA,IAAI,CAAC,CAAD,CAAI,EAN/B;AAOE,IAAA,MAAM,EAAC,OAPT;AAQE,IAAA,QAAQ,MARV;AASE,IAAA,KAAK,EACHR,WAAW,CAAE,GAAEV,iBAAiB,CAACkB,IAAI,CAAC,CAAD,CAAL,CAAU,IAAGA,IAAI,CAAC,CAAD,CAAI,EAA1C,CAAX,IAA2D,EAV/D;AAYE,IAAA,OAAO,EAAC,UAZV;AAaE,IAAA,QAAQ,EAAEE,KAAK,IAAIT,eAAe,CAACS,KAAD,CAbpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,eAoBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,SAAS,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAEP,mBADZ;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,OAAO,EAAE,MAAML,eAAe,EAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,eAUE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEF,OAAO,CAACR,YADrB;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,OAAO,EAAE,MAAMW,MAAM,EAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAVF,CApBF,CAnBF,CADF,CADF;AAiED","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, TextField, Grid, Button, Box } from '@material-ui/core';\nimport { Paper } from '../../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(3)\n  },\n  paper: { padding: theme.spacing(4) },\n  gridContainer: {\n    marginTop: theme.spacing(4)\n  },\n  successInfo: { margin: theme.spacing(3) },\n  ignoreButton: {\n    marginLeft: theme.spacing(3)\n  }\n}));\n\nconst convertToAlphabet = value => (value + 10).toString(36).toUpperCase();\n\nexport default function BookingInvitation(props) {\n  const classes = useStyles(props);\n  const {\n    selectedSeats,\n    sendInvitations,\n    ignore,\n    invitations,\n    onSetInvitation,\n    onDownloadPDF\n  } = props;\n\n  const notValidInvitations = !Object.keys(invitations).length;\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h4\" align=\"center\">\n          Guest Invitation\n        </Typography>\n        <Typography\n          className={classes.successInfo}\n          variant=\"body1\"\n          align=\"center\">\n          You have successfuly booked your seats. Please fill the emails below,\n          to send invitations to your friends!\n        </Typography>\n        <Box width={1} textAlign=\"center\">\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={() => onDownloadPDF()}>\n            Download Pass\n          </Button>\n        </Box>\n        <Grid className={classes.gridContainer} container spacing={3}>\n          {selectedSeats.map((seat, index) => (\n            <Grid item xs={12} md={6} lg={4} key={'seat-' + index}>\n              <TextField\n                fullWidth\n                label=\"email\"\n                name={`${convertToAlphabet(seat[0])}-${seat[1]}`}\n                helperText={`Please select an Email for Row : ${convertToAlphabet(\n                  seat[0]\n                )} - Seat Number : ${seat[1]}`}\n                margin=\"dense\"\n                required\n                value={\n                  invitations[`${convertToAlphabet(seat[0])}-${seat[1]}`] || ''\n                }\n                variant=\"outlined\"\n                onChange={event => onSetInvitation(event)}\n              />\n            </Grid>\n          ))}\n          <Grid item xs={12} container>\n            <Grid item>\n              <Button\n                disabled={notValidInvitations}\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={() => sendInvitations()}>\n                Send Invitations\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                className={classes.ignoreButton}\n                color=\"secondary\"\n                variant=\"outlined\"\n                onClick={() => ignore()}>\n                Ignore\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}