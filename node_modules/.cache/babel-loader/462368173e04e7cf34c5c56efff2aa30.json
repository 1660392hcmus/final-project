{"ast":null,"code":"import { GET_USERS, ADD_USER, UPDATE_USER, DELETE_USER, TOGGLE_USER_DIALOG, SELECT_USER, SELECT_ALL_USERS } from '../types';\nconst initialState = {\n  users: [],\n  selectedUsers: [],\n  openDialog: false\n};\n\nconst toggleUserDialog = state => ({ ...state,\n  openDialog: !state.openDialog\n});\n\nconst selectUser = (state, payload) => {\n  const {\n    selectedUsers\n  } = state;\n  const selectedIndex = selectedUsers.indexOf(payload);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selectedUsers, payload);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selectedUsers.slice(1));\n  } else if (selectedIndex === selectedUsers.length - 1) {\n    newSelected = newSelected.concat(selectedUsers.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(selectedUsers.slice(0, selectedIndex), selectedUsers.slice(selectedIndex + 1));\n  }\n\n  return { ...state,\n    selectedUsers: newSelected\n  };\n};\n\nconst selectAllUsers = state => ({ ...state,\n  selectedUsers: !state.selectedUsers.length ? state.users.map(user => user._id) : []\n});\n\nconst getUsers = (state, payload) => ({ ...state,\n  users: payload\n});\n\nconst addUser = (state, payload) => ({ ...state,\n  users: [...state.users, payload]\n});\n\nconst updateUser = (state, payload) => ({ ...state,\n  users: [...state.users.filter(user => user._id !== payload._id), payload]\n});\n\nconst deleteUser = (state, payload) => ({ ...state,\n  users: state.users.filter(user => user._id !== payload),\n  selectedUsers: state.selectedUsers.filter(element => element !== payload)\n});\n\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_USERS:\n      return getUsers(state, payload);\n\n    case TOGGLE_USER_DIALOG:\n      return toggleUserDialog(state);\n\n    case SELECT_USER:\n      return selectUser(state, payload);\n\n    case SELECT_ALL_USERS:\n      return selectAllUsers(state);\n\n    case ADD_USER:\n      return addUser(state, payload);\n\n    case UPDATE_USER:\n      return updateUser(state, payload);\n\n    case DELETE_USER:\n      return deleteUser(state, payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/store/reducers/users.js"],"names":["GET_USERS","ADD_USER","UPDATE_USER","DELETE_USER","TOGGLE_USER_DIALOG","SELECT_USER","SELECT_ALL_USERS","initialState","users","selectedUsers","openDialog","toggleUserDialog","state","selectUser","payload","selectedIndex","indexOf","newSelected","concat","slice","length","selectAllUsers","map","user","_id","getUsers","addUser","updateUser","filter","deleteUser","element","action","type"],"mappings":"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","sourcesContent":["import {\n  GET_USERS,\n  ADD_USER,\n  UPDATE_USER,\n  DELETE_USER,\n  TOGGLE_USER_DIALOG,\n  SELECT_USER,\n  SELECT_ALL_USERS\n} from '../types';\n\nconst initialState = {\n  users: [],\n  selectedUsers: [],\n  openDialog: false\n};\n\nconst toggleUserDialog = state => ({\n  ...state,\n  openDialog: !state.openDialog\n});\n\nconst selectUser = (state, payload) => {\n  const { selectedUsers } = state;\n\n  const selectedIndex = selectedUsers.indexOf(payload);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selectedUsers, payload);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selectedUsers.slice(1));\n  } else if (selectedIndex === selectedUsers.length - 1) {\n    newSelected = newSelected.concat(selectedUsers.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selectedUsers.slice(0, selectedIndex),\n      selectedUsers.slice(selectedIndex + 1)\n    );\n  }\n\n  return {\n    ...state,\n    selectedUsers: newSelected\n  };\n};\n\nconst selectAllUsers = state => ({\n  ...state,\n  selectedUsers: !state.selectedUsers.length\n    ? state.users.map(user => user._id)\n    : []\n});\n\nconst getUsers = (state, payload) => ({\n  ...state,\n  users: payload\n});\n\nconst addUser = (state, payload) => ({\n  ...state,\n  users: [...state.users, payload]\n});\n\nconst updateUser = (state, payload) => ({\n  ...state,\n  users: [...state.users.filter(user => user._id !== payload._id), payload]\n});\n\nconst deleteUser = (state, payload) => ({\n  ...state,\n  users: state.users.filter(user => user._id !== payload),\n  selectedUsers: state.selectedUsers.filter(element => element !== payload)\n});\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_USERS:\n      return getUsers(state, payload);\n    case TOGGLE_USER_DIALOG:\n      return toggleUserDialog(state);\n    case SELECT_USER:\n      return selectUser(state, payload);\n    case SELECT_ALL_USERS:\n      return selectAllUsers(state);\n    case ADD_USER:\n      return addUser(state, payload);\n    case UPDATE_USER:\n      return updateUser(state, payload);\n    case DELETE_USER:\n      return deleteUser(state, payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}