{"ast":null,"code":"import { GET_SHOWTIMES, TOGGLE_DIALOG, SELECT_SHOWTIMES, SELECT_ALL_SHOWTIMES, DELETE_SHOWTIME } from '../types';\nconst initialState = {\n  showtimes: [],\n  selectedShowtimes: [],\n  openDialog: false\n};\n\nconst getShowtimes = (state, payload) => ({ ...state,\n  showtimes: payload\n});\n\nconst toggleDialog = state => ({ ...state,\n  openDialog: !state.openDialog\n});\n\nconst selectShowtime = (state, payload) => {\n  const {\n    selectedShowtimes\n  } = state;\n  const selectedIndex = selectedShowtimes.indexOf(payload);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selectedShowtimes, payload);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selectedShowtimes.slice(1));\n  } else if (selectedIndex === selectedShowtimes.length - 1) {\n    newSelected = newSelected.concat(selectedShowtimes.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(selectedShowtimes.slice(0, selectedIndex), selectedShowtimes.slice(selectedIndex + 1));\n  }\n\n  return { ...state,\n    selectedShowtimes: newSelected\n  };\n};\n\nconst selectAllShowtimes = state => ({ ...state,\n  selectedShowtimes: !state.selectedShowtimes.length ? state.showtimes.map(showtime => showtime._id) : []\n});\n\nconst deleteShowtime = (state, payload) => ({ ...state,\n  selectedShowtimes: state.selectedShowtimes.filter(element => element !== payload)\n});\n\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_SHOWTIMES:\n      return getShowtimes(state, payload);\n\n    case TOGGLE_DIALOG:\n      return toggleDialog(state);\n\n    case SELECT_SHOWTIMES:\n      return selectShowtime(state, payload);\n\n    case SELECT_ALL_SHOWTIMES:\n      return selectAllShowtimes(state);\n\n    case DELETE_SHOWTIME:\n      return deleteShowtime(state, payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/store/reducers/showtimes.js"],"names":["GET_SHOWTIMES","TOGGLE_DIALOG","SELECT_SHOWTIMES","SELECT_ALL_SHOWTIMES","DELETE_SHOWTIME","initialState","showtimes","selectedShowtimes","openDialog","getShowtimes","state","payload","toggleDialog","selectShowtime","selectedIndex","indexOf","newSelected","concat","slice","length","selectAllShowtimes","map","showtime","_id","deleteShowtime","filter","element","action","type"],"mappings":"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","sourcesContent":["import {\n  GET_SHOWTIMES,\n  TOGGLE_DIALOG,\n  SELECT_SHOWTIMES,\n  SELECT_ALL_SHOWTIMES,\n  DELETE_SHOWTIME\n} from '../types';\n\nconst initialState = {\n  showtimes: [],\n  selectedShowtimes: [],\n  openDialog: false\n};\n\nconst getShowtimes = (state, payload) => ({\n  ...state,\n  showtimes: payload\n});\n\nconst toggleDialog = state => ({\n  ...state,\n  openDialog: !state.openDialog\n});\n\nconst selectShowtime = (state, payload) => {\n  const { selectedShowtimes } = state;\n\n  const selectedIndex = selectedShowtimes.indexOf(payload);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selectedShowtimes, payload);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selectedShowtimes.slice(1));\n  } else if (selectedIndex === selectedShowtimes.length - 1) {\n    newSelected = newSelected.concat(selectedShowtimes.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selectedShowtimes.slice(0, selectedIndex),\n      selectedShowtimes.slice(selectedIndex + 1)\n    );\n  }\n\n  return {\n    ...state,\n    selectedShowtimes: newSelected\n  };\n};\n\nconst selectAllShowtimes = state => ({\n  ...state,\n  selectedShowtimes: !state.selectedShowtimes.length\n    ? state.showtimes.map(showtime => showtime._id)\n    : []\n});\n\nconst deleteShowtime = (state, payload) => ({\n  ...state,\n  selectedShowtimes: state.selectedShowtimes.filter(\n    element => element !== payload\n  )\n});\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_SHOWTIMES:\n      return getShowtimes(state, payload);\n    case TOGGLE_DIALOG:\n      return toggleDialog(state);\n    case SELECT_SHOWTIMES:\n      return selectShowtime(state, payload);\n    case SELECT_ALL_SHOWTIMES:\n      return selectAllShowtimes(state);\n    case DELETE_SHOWTIME:\n      return deleteShowtime(state, payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}