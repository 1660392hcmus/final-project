{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/CinemaList/CinemaList.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCinemas } from '../../../store/actions';\nimport { withStyles } from '@material-ui/core';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { AddCinema, CinemaToolbar } from './components';\nimport { ResponsiveDialog } from '../../../components';\nimport styles from './styles';\nimport CinemaCard from '../../Public/components/CinemaCard/CinemaCard';\nimport { match } from '../../../utils';\n\nclass CinemaList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openEditDialog = cinema => {\n      this.setState({\n        openEditDialog: true,\n        editCinema: cinema\n      });\n    };\n\n    this.CloseEditDialog = () => {\n      this.setState({\n        openEditDialog: false,\n        editCinema: null\n      });\n    };\n\n    this.state = {\n      editCinema: null,\n      openEditDialog: false,\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      cinemas,\n      getCinemas\n    } = this.props;\n    if (!cinemas.length) getCinemas();\n  }\n\n  editCinema(cinema) {\n    this.OpenEditDialog(cinema);\n  }\n\n  render() {\n    const {\n      classes,\n      cinemas\n    } = this.props;\n    const {\n      editCinema,\n      search\n    } = this.state;\n    const filteredCinemas = match(search, cinemas, 'name');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CinemaToolbar, {\n      search: this.state.search,\n      onChangeSearch: e => this.setState({\n        search: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, filteredCinemas.length === 0 ? /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, filteredCinemas.map(cinema => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: cinema._id,\n      lg: 4,\n      md: 6,\n      xs: 12,\n      onClick: () => this.openEditDialog(cinema),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CinemaCard, {\n      cinema: cinema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(ResponsiveDialog, {\n      id: \"Edit-cinema\",\n      open: this.state.openEditDialog,\n      handleClose: () => this.CloseEditDialog(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddCinema, {\n      editCinema: editCinema,\n      handleClose: () => this.CloseEditDialog(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nCinemaList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({\n  cinemaState\n}) => ({\n  cinemas: cinemaState.cinemas\n});\n\nconst mapDispatchToProps = {\n  getCinemas\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CinemaList));","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/pages/Admin/CinemaList/CinemaList.js"],"names":["React","Component","PropTypes","connect","getCinemas","withStyles","CircularProgress","Grid","AddCinema","CinemaToolbar","ResponsiveDialog","styles","CinemaCard","match","CinemaList","constructor","props","openEditDialog","cinema","setState","editCinema","CloseEditDialog","state","search","componentDidMount","cinemas","length","OpenEditDialog","render","classes","filteredCinemas","root","e","target","value","content","map","_id","propTypes","object","isRequired","mapStateToProps","cinemaState","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCinemas } from '../../../store/actions';\nimport { withStyles } from '@material-ui/core';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { AddCinema, CinemaToolbar } from './components';\nimport { ResponsiveDialog } from '../../../components';\nimport styles from './styles';\nimport CinemaCard from '../../Public/components/CinemaCard/CinemaCard';\nimport { match } from '../../../utils';\n\nclass CinemaList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editCinema: null,\n      openEditDialog: false,\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    const { cinemas, getCinemas } = this.props;\n    if (!cinemas.length) getCinemas();\n  }\n\n  openEditDialog = cinema => {\n    this.setState({ openEditDialog: true, editCinema: cinema });\n  };\n\n  CloseEditDialog = () => {\n    this.setState({ openEditDialog: false, editCinema: null });\n  };\n\n  editCinema(cinema) {\n    this.OpenEditDialog(cinema);\n  }\n\n  render() {\n    const { classes, cinemas } = this.props;\n    const { editCinema, search } = this.state;\n    const filteredCinemas = match(search, cinemas, 'name');\n    return (\n      <div className={classes.root}>\n        <CinemaToolbar\n          search={this.state.search}\n          onChangeSearch={e => this.setState({ search: e.target.value })}\n        />\n        <div className={classes.content}>\n          {filteredCinemas.length === 0 ? (\n            <CircularProgress />\n          ) : (\n            <Grid container spacing={3}>\n              {filteredCinemas.map(cinema => (\n                <Grid\n                  item\n                  key={cinema._id}\n                  lg={4}\n                  md={6}\n                  xs={12}\n                  onClick={() => this.openEditDialog(cinema)}>\n                  <CinemaCard cinema={cinema} />\n                </Grid>\n              ))}\n            </Grid>\n          )}\n        </div>\n        <ResponsiveDialog\n          id=\"Edit-cinema\"\n          open={this.state.openEditDialog}\n          handleClose={() => this.CloseEditDialog()}>\n          <AddCinema\n            editCinema={editCinema}\n            handleClose={() => this.CloseEditDialog()}\n          />\n        </ResponsiveDialog>\n      </div>\n    );\n  }\n}\n\nCinemaList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({ cinemaState }) => ({\n  cinemas: cinemaState.cinemas\n});\n\nconst mapDispatchToProps = { getCinemas };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(CinemaList));\n"]},"metadata":{},"sourceType":"module"}