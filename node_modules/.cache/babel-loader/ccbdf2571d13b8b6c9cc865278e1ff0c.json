{"ast":null,"code":"var _jsxFileName = \"/Users/tainguyennguyen/Desktop/final-project/src/layouts/AdminLayout/AdminLayout.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Drawer } from '@material-ui/core';\nimport { Footer, Sidebar, Topbar } from './components'; // Component styles\n\nimport styles from './styles';\n\nclass AdminLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleOpen = () => {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      isOpen\n    } = this.state;\n    const {\n      title,\n      children,\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Topbar, {\n      title: title,\n      ToolbarClasses: classes.topbar,\n      isSidebarOpen: isOpen,\n      onToggleSidebar: this.handleToggleOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Drawer, {\n      anchor: \"left\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      open: isOpen,\n      onClose: this.handleClose,\n      variant: \"persistent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      className: classes.sidebar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"main\", {\n      className: classnames({\n        [classes.contentShift]: isOpen,\n        [classes.content]: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, children, /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nAdminLayout.defaultProps = {\n  isSidebarOpen: false\n};\nAdminLayout.propTypes = {\n  children: PropTypes.node,\n  isSidebarOpen: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default withStyles(styles)(AdminLayout);","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/src/layouts/AdminLayout/AdminLayout.js"],"names":["React","Component","Fragment","withStyles","classnames","PropTypes","Drawer","Footer","Sidebar","Topbar","styles","AdminLayout","constructor","props","handleToggleOpen","setState","prevState","isOpen","handleClose","state","render","title","children","classes","topbar","paper","drawerPaper","sidebar","contentShift","content","defaultProps","isSidebarOpen","propTypes","node","bool","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAwC,cAAxC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,WAAN,SAA0BV,SAA1B,CAAoC;AAClCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,gBAfmB,GAeA,MAAM;AACvB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAAEC,QAAAA,MAAM,EAAE,CAACD,SAAS,CAACC;AAArB,OAAL,CAAvB;AACD,KAjBkB;;AAAA,SAmBnBC,WAnBmB,GAmBL,MAAM;AAClB,WAAKH,QAAL,CAAc;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KArBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAkBDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAa,KAAKE,KAAxB;AACA,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA+B,KAAKV,KAA1C;AACA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEQ,KADT;AAEE,MAAA,cAAc,EAAEE,OAAO,CAACC,MAF1B;AAGE,MAAA,aAAa,EAAEP,MAHjB;AAIE,MAAA,eAAe,EAAE,KAAKH,gBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,MAAD;AACE,MAAA,MAAM,EAAC,MADT;AAEE,MAAA,OAAO,EAAE;AAAEW,QAAAA,KAAK,EAAEF,OAAO,CAACG;AAAjB,OAFX;AAGE,MAAA,IAAI,EAAET,MAHR;AAIE,MAAA,OAAO,EAAE,KAAKC,WAJhB;AAKE,MAAA,OAAO,EAAC,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEK,OAAO,CAACI,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAPF,eAeE;AACE,MAAA,SAAS,EAAEvB,UAAU,CAAC;AACpB,SAACmB,OAAO,CAACK,YAAT,GAAwBX,MADJ;AAEpB,SAACM,OAAO,CAACM,OAAT,GAAmB;AAFC,OAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGP,QALH,eAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAfF,CADF;AA0BD;;AArDiC;;AAA9BX,W,CAOGmB,Y,GAAe;AACpBC,EAAAA,aAAa,EAAE;AADK,C;AAPlBpB,W,CAUGqB,S,GAAY;AACjBV,EAAAA,QAAQ,EAAEjB,SAAS,CAAC4B,IADH;AAEjBF,EAAAA,aAAa,EAAE1B,SAAS,CAAC6B,IAFR;AAGjBb,EAAAA,KAAK,EAAEhB,SAAS,CAAC8B;AAHA,C;AA8CrB,eAAehC,UAAU,CAACO,MAAD,CAAV,CAAmBC,WAAnB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Drawer } from '@material-ui/core';\nimport { Footer, Sidebar, Topbar } from './components';\n\n// Component styles\nimport styles from './styles';\n\nclass AdminLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n  static defaultProps = {\n    isSidebarOpen: false\n  };\n  static propTypes = {\n    children: PropTypes.node,\n    isSidebarOpen: PropTypes.bool,\n    title: PropTypes.string\n  };\n\n  handleToggleOpen = () => {\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n  };\n\n  handleClose = () => {\n    this.setState({ isOpen: false });\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    const { title, children, classes } = this.props;\n    return (\n      <Fragment>\n        <Topbar\n          title={title}\n          ToolbarClasses={classes.topbar}\n          isSidebarOpen={isOpen}\n          onToggleSidebar={this.handleToggleOpen}\n        />\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.drawerPaper }}\n          open={isOpen}\n          onClose={this.handleClose}\n          variant=\"persistent\">\n          <Sidebar className={classes.sidebar} />\n        </Drawer>\n        <main\n          className={classnames({\n            [classes.contentShift]: isOpen,\n            [classes.content]: true\n          })}>\n          {children}\n          <Footer />\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(AdminLayout);\n"]},"metadata":{},"sourceType":"module"}