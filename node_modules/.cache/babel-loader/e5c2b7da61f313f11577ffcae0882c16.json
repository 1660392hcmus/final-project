{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n/* eslint-disable no-constant-condition */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$stringify = config.stringify,\n      stringify = _config$stringify === void 0 ? JSON.stringify : _config$stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    return options.filter(function (option) {\n      var candidate = stringify(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n  };\n}\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      defaultValue = props.defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      valueProp = props.value;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var popperRef = React.useRef(null);\n  React.useEffect(function () {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var selectedIndexRef = React.useRef(-1);\n\n  function setHighlightedIndex(index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop;\n      }\n    }\n  }\n\n  var _React$useRef = React.useRef(valueProp !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(function () {\n    return !isControlled ? defaultValue || (multiple ? [] : null) : null;\n  }),\n      valueState = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var value = isControlled ? valueProp : valueState;\n\n  var _React$useState5 = React.useState(''),\n      inputValue = _React$useState5[0],\n      setInputValue = _React$useState5[1];\n\n  var _React$useState6 = React.useState(false),\n      focused = _React$useState6[0],\n      setFocused = _React$useState6[1];\n\n  var resetInputValue = useEventCallback(function (newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(['Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.', \"The component expect a string but received \".concat(_typeof(optionLabel), \".\"), \"For the input option: \".concat(JSON.stringify(newValue), \", `getOptionLabel` returns: \").concat(newInputValue, \".\")].join('\\n'));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    setInputValue(newInputValue);\n  });\n  React.useEffect(function () {\n    resetInputValue(value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState7 = React.useState(false),\n      openState = _React$useState7[0],\n      setOpenState = _React$useState7[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueFilter = !multiple && value && inputValue === getOptionLabel(value) ? '' : inputValue;\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value.indexOf(option) !== -1 : value === option)) {\n      return false;\n    }\n\n    return true;\n  }), {\n    inputValue: inputValueFilter\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = function changeHighlightedIndex(diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n    selectedIndexRef.current = nextIndex;\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    changeHighlightedIndex('reset', 'next');\n  }, [filteredOptions.length]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  };\n\n  var selectNewValue = function selectNewValue(event, newValue) {\n    if (multiple) {\n      var item = newValue;\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n      var itemIndex = value.indexOf(item);\n\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n\n    handleValue(event, newValue);\n\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n\n    resetInputValue(newValue);\n    selectedIndexRef.current = -1;\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    handleValue(event, multiple ? [] : null);\n\n    if (disableOpenOnFocus) {\n      handleClose();\n    }\n\n    setInputValue('');\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    switch (event.key) {\n      case 'Home':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex('start', 'next');\n        break;\n\n      case 'End':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex('end', 'previous');\n        break;\n\n      case 'PageUp':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex(-pageSize, 'previous');\n        handleOpen(event);\n        break;\n\n      case 'PageDown':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex(pageSize, 'next');\n        handleOpen(event);\n        break;\n\n      case 'ArrowDown':\n        // Prevent cursor move\n        event.preventDefault();\n        changeHighlightedIndex(1, 'next');\n        handleOpen(event);\n        break;\n\n      case 'ArrowUp':\n        // Prevent cursor move\n        event.preventDefault();\n        changeHighlightedIndex(-1, 'previous');\n        handleOpen(event);\n        break;\n\n      case 'ArrowLeft':\n        handleFocusTag(event, 'previous');\n        break;\n\n      case 'ArrowRight':\n        handleFocusTag(event, 'next');\n        break;\n\n      case 'Enter':\n        if (highlightedIndexRef.current !== -1) {\n          // We don't want to validate the form.\n          event.preventDefault();\n          selectNewValue(event, filteredOptions[highlightedIndexRef.current]);\n        } else if (freeSolo && inputValue !== '') {\n          selectNewValue(event, inputValue);\n        }\n\n        break;\n\n      case 'Escape':\n        if (popupOpen) {\n          event.stopPropagation();\n          handleClose(event);\n        } else if (clearOnEscape) {\n          event.stopPropagation();\n          handleClear(event);\n        }\n\n        break;\n\n      case 'Backspace':\n        if (multiple && inputValue === '' && value.length > 0) {\n          var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n          var newValue = _toConsumableArray(value);\n\n          newValue.splice(index, 1);\n          handleValue(event, newValue);\n        }\n\n        break;\n\n      default:\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (!disableOpenOnFocus) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocused(false);\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && selectedIndexRef.current !== -1) {\n      handleValue(event, filteredOptions[selectedIndexRef.current]);\n    } else if (!freeSolo) {\n      resetInputValue(value);\n    }\n\n    handleClose(event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n\n    setInputValue(newValue);\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    selectNewValue(event, filteredOptions[highlightedIndexRef.current]);\n  };\n\n  var handleTagDelete = function handleTagDelete(event) {\n    var index = Number(event.currentTarget.getAttribute('data-tag-index'));\n\n    var newValue = _toConsumableArray(value);\n\n    newValue.splice(index, 1);\n    handleValue(event, newValue);\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Restore the focus to the correct option.\n\n\n    setHighlightedIndex(highlightedIndexRef.current);\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    inputRef.current.focus();\n\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var key = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].key === key) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        acc.push({\n          key: key,\n          index: index,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      return {\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen,\n        onKeyDown: handleKeyDown\n      };\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\")\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? undefined : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': \"\".concat(id, \"-popup\"),\n        // autoComplete: 'off', // Disable browser's suggestion that might overlap with the popup.\n        autoComplete: 'disabled',\n        // disable autocomplete and autofill\n        ref: inputRef,\n        autoCorrect: 'off',\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear,\n        onMouseDown: function onMouseDown(event) {\n          event.preventDefault();\n        }\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator,\n        onMouseDown: function onMouseDown(event) {\n          event.preventDefault();\n        }\n      };\n    },\n    getTagProps: function getTagProps() {\n      return {\n        onDelete: handleTagDelete\n      };\n    },\n    getPopupProps: function getPopupProps() {\n      return {\n        role: 'presentation'\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref2) {\n      var index = _ref2.index,\n          option = _ref2.option;\n      var selected = multiple ? value.indexOf(option) !== -1 : value === option;\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        tabIndex: -1,\n        role: 'option',\n        key: index,\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};","map":{"version":3,"sources":["/Users/tainguyennguyen/Desktop/final-project/node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js"],"names":["_toConsumableArray","_typeof","React","PropTypes","setRef","useEventCallback","stripDiacritics","string","normalize","replace","createFilterOptions","config","arguments","length","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","_config$matchFrom","matchFrom","_config$stringify","stringify","JSON","_config$trim","trim","options","_ref","inputValue","input","toLowerCase","filter","option","candidate","indexOf","defaultFilterOptions","pageSize","useAutocomplete","props","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$clearOnEscape","clearOnEscape","_props$debug","debug","defaultValue","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disableListWra","disableListWrap","_props$disableOpenOnF","disableOpenOnFocus","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabel","x","groupBy","idProp","id","_props$includeInputIn","includeInputInList","_props$multiple","multiple","onChange","onClose","onOpen","openProp","open","_props$options","valueProp","value","_React$useState","useState","defaultId","setDefaultId","useEffect","concat","Math","round","random","popperRef","useRef","current","update","inputRef","listboxRef","_React$useState2","anchorEl","setAnchorEl","_React$useState3","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","selectedIndexRef","setHighlightedIndex","index","mouse","removeAttribute","setAttribute","prev","querySelector","listboxNode","parentElement","scrollTop","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","_React$useRef","isControlled","_React$useState4","valueState","setValue","_React$useState5","setInputValue","_React$useState6","focused","setFocused","resetInputValue","newValue","newInputValue","optionLabel","process","env","NODE_ENV","console","error","join","_React$useRef2","isOpenControlled","_React$useState7","openState","setOpenState","inputValueFilter","popupOpen","filteredOptions","focusTag","tagToFocus","focus","validOptionIndex","direction","nextFocus","hasAttribute","disabled","getAttribute","changeHighlightedIndex","diff","getNextIndex","maxIndex","newIndex","abs","nextIndex","setSelectionRange","handleOpen","event","handleClose","handleValue","selectNewValue","item","Array","isArray","itemIndex","push","splice","validTagIndex","handleFocusTag","nextTag","handleClear","handleKeyDown","key","preventDefault","stopPropagation","handleFocus","handleBlur","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionClick","handleTagDelete","handleListboxRef","node","handlePopupIndicator","dirty","groupedOptions","reduce","acc","getRootProps","role","onKeyDown","getInputLabelProps","getInputProps","onBlur","onFocus","ref","autoCorrect","autoCapitalize","spellCheck","getClearProps","tabIndex","onClick","onMouseDown","getPopupIndicatorProps","getTagProps","onDelete","getPopupProps","getListboxProps","getOptionProps","_ref2","selected","onMouseOver","propTypes","bool","classes","object","className","any","func","array"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$stringify = config.stringify,\n      stringify = _config$stringify === void 0 ? JSON.stringify : _config$stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    return options.filter(function (option) {\n      var candidate = stringify(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n  };\n}\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      defaultValue = props.defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      valueProp = props.value;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var popperRef = React.useRef(null);\n  React.useEffect(function () {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var selectedIndexRef = React.useRef(-1);\n\n  function setHighlightedIndex(index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop;\n      }\n    }\n  }\n\n  var _React$useRef = React.useRef(valueProp !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(function () {\n    return !isControlled ? defaultValue || (multiple ? [] : null) : null;\n  }),\n      valueState = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var value = isControlled ? valueProp : valueState;\n\n  var _React$useState5 = React.useState(''),\n      inputValue = _React$useState5[0],\n      setInputValue = _React$useState5[1];\n\n  var _React$useState6 = React.useState(false),\n      focused = _React$useState6[0],\n      setFocused = _React$useState6[1];\n\n  var resetInputValue = useEventCallback(function (newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(['Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.', \"The component expect a string but received \".concat(_typeof(optionLabel), \".\"), \"For the input option: \".concat(JSON.stringify(newValue), \", `getOptionLabel` returns: \").concat(newInputValue, \".\")].join('\\n'));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    setInputValue(newInputValue);\n  });\n  React.useEffect(function () {\n    resetInputValue(value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState7 = React.useState(false),\n      openState = _React$useState7[0],\n      setOpenState = _React$useState7[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueFilter = !multiple && value && inputValue === getOptionLabel(value) ? '' : inputValue;\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value.indexOf(option) !== -1 : value === option)) {\n      return false;\n    }\n\n    return true;\n  }), {\n    inputValue: inputValueFilter\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = function changeHighlightedIndex(diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n    selectedIndexRef.current = nextIndex;\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    changeHighlightedIndex('reset', 'next');\n  }, [filteredOptions.length]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  };\n\n  var selectNewValue = function selectNewValue(event, newValue) {\n    if (multiple) {\n      var item = newValue;\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n      var itemIndex = value.indexOf(item);\n\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n\n    handleValue(event, newValue);\n\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n\n    resetInputValue(newValue);\n    selectedIndexRef.current = -1;\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    handleValue(event, multiple ? [] : null);\n\n    if (disableOpenOnFocus) {\n      handleClose();\n    }\n\n    setInputValue('');\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    switch (event.key) {\n      case 'Home':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex('start', 'next');\n        break;\n\n      case 'End':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex('end', 'previous');\n        break;\n\n      case 'PageUp':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex(-pageSize, 'previous');\n        handleOpen(event);\n        break;\n\n      case 'PageDown':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex(pageSize, 'next');\n        handleOpen(event);\n        break;\n\n      case 'ArrowDown':\n        // Prevent cursor move\n        event.preventDefault();\n        changeHighlightedIndex(1, 'next');\n        handleOpen(event);\n        break;\n\n      case 'ArrowUp':\n        // Prevent cursor move\n        event.preventDefault();\n        changeHighlightedIndex(-1, 'previous');\n        handleOpen(event);\n        break;\n\n      case 'ArrowLeft':\n        handleFocusTag(event, 'previous');\n        break;\n\n      case 'ArrowRight':\n        handleFocusTag(event, 'next');\n        break;\n\n      case 'Enter':\n        if (highlightedIndexRef.current !== -1) {\n          // We don't want to validate the form.\n          event.preventDefault();\n          selectNewValue(event, filteredOptions[highlightedIndexRef.current]);\n        } else if (freeSolo && inputValue !== '') {\n          selectNewValue(event, inputValue);\n        }\n\n        break;\n\n      case 'Escape':\n        if (popupOpen) {\n          event.stopPropagation();\n          handleClose(event);\n        } else if (clearOnEscape) {\n          event.stopPropagation();\n          handleClear(event);\n        }\n\n        break;\n\n      case 'Backspace':\n        if (multiple && inputValue === '' && value.length > 0) {\n          var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n          var newValue = _toConsumableArray(value);\n\n          newValue.splice(index, 1);\n          handleValue(event, newValue);\n        }\n\n        break;\n\n      default:\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (!disableOpenOnFocus) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocused(false);\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && selectedIndexRef.current !== -1) {\n      handleValue(event, filteredOptions[selectedIndexRef.current]);\n    } else if (!freeSolo) {\n      resetInputValue(value);\n    }\n\n    handleClose(event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n\n    setInputValue(newValue);\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    selectNewValue(event, filteredOptions[highlightedIndexRef.current]);\n  };\n\n  var handleTagDelete = function handleTagDelete(event) {\n    var index = Number(event.currentTarget.getAttribute('data-tag-index'));\n\n    var newValue = _toConsumableArray(value);\n\n    newValue.splice(index, 1);\n    handleValue(event, newValue);\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Restore the focus to the correct option.\n\n\n    setHighlightedIndex(highlightedIndexRef.current);\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    inputRef.current.focus();\n\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var key = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].key === key) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        acc.push({\n          key: key,\n          index: index,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      return {\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen,\n        onKeyDown: handleKeyDown\n      };\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\")\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? undefined : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': \"\".concat(id, \"-popup\"),\n        // autoComplete: 'off', // Disable browser's suggestion that might overlap with the popup.\n        autoComplete: 'disabled',\n        // disable autocomplete and autofill\n        ref: inputRef,\n        autoCorrect: 'off',\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear,\n        onMouseDown: function onMouseDown(event) {\n          event.preventDefault();\n        }\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator,\n        onMouseDown: function onMouseDown(event) {\n          event.preventDefault();\n        }\n      };\n    },\n    getTagProps: function getTagProps() {\n      return {\n        onDelete: handleTagDelete\n      };\n    },\n    getPopupProps: function getPopupProps() {\n      return {\n        role: 'presentation'\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref2) {\n      var index = _ref2.index,\n          option = _ref2.option;\n      var selected = multiple ? value.indexOf(option) !== -1 : value === option;\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        tabIndex: -1,\n        role: 'option',\n        key: index,\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};"]},"metadata":{},"sourceType":"module"}